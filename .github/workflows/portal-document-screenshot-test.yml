name: Portal Document Screenshot
run-name: Document Screenshot 
on:
  push:
    branches:
      - feature/IVYPORTAL-18233-Create-Github-workflow-for-screenshot-document-build-12
  workflow_dispatch:
    inputs:
      testPatternToRun:
        description: 'Test pattern to run'
        default: 'com.axonivy.portal.selenium.document.screenshot.*Test'
        required: true
      engineDownloadURL:
        description: 'url to download engine'
        default: 'https://developer.axonivy.com/permalink/nightly-12.0/axonivy-engine-windows.zip'
        required: true

env:
  ENGINE_DIR: $GITHUB_WORKSPACE/ivy/engine/nightly-12.0
  ENGINE_URL: https://developer.axonivy.com/permalink/nightly-12.0/axonivy-engine.zip
  WAIT_TIME: 60
  
jobs:
  portal-document-screenshot:
    runs-on: ubuntu-latest
    name: portal-document-screenshot - ${{ github.head_ref || github.ref_name }}
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.8
      - name: Export environment variables
        run: |
          echo "RUN ID ${{ github. run_id }}"
          echo "export IVY_JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "export JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "export PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
          
      - name: Set up and verify directories
        run: |
          ENGINE_DIR="${GITHUB_WORKSPACE}/ivy/engine/nightly"
          mkdir -p $ENGINE_DIR
          sudo chown -R $USER:$USER $ENGINE_DIR
          echo "ENGINE_DIR=$ENGINE_DIR" >> $GITHUB_ENV

      - name: Download engine
        run: |
          cd $ENGINE_DIR
          wget $ENGINE_URL -O axonivy-engine.zip
          unzip -o axonivy-engine.zip -d .
          rm axonivy-engine.zip

      - name: Verify engine directory
        run: |
          if [ ! -d "$ENGINE_DIR" ]; then
            echo "Engine directory does not exist"
            exit 1
          fi

      - name: Copy decorate js and css to Portal
        run: |
          cat AxonIvyPortal/portal-selenium-test/resources/css/document-screenshot.css >> AxonIvyPortal/portal/webContent/resources/css/portal.css
          cat AxonIvyPortal/portal-selenium-test/resources/css/document-screenshot.css >> Showcase/portal-user-examples/webContent/resources/css/portal-user-examples.css
          cat AxonIvyPortal/portal-selenium-test/resources/js/document-screenshot.js >> AxonIvyPortal/portal/webContent/resources/js/portal.js
          cat AxonIvyPortal/portal-selenium-test/resources/js/document-screenshot.js >> Showcase/portal-user-examples/webContent/resources/js/portal-user-examples.js

      - name: Build Portal modules
        run: |
          modules=(
            "AxonIvyPortal/portal-components"
            "AxonIvyPortal/portal"
            "AxonIvyPortal/PortalKitTestHelper"
            "Showcase/portal-user-examples"
            "Showcase/portal-developer-examples"
            "Showcase/InternalSupport"
            "Showcase/portal-components-examples"
            "AxonIvyPortal/PortalApp"
            "Showcase/portal-demo-app"
          )
          for module in "${modules[@]}"; do
            mvn clean install -f $module/pom.xml -Divy.engine.directory=$ENGINE_DIR
          done

      - name: Deploy Portal Modules
        run: |
          DEPLOYMENT=$ENGINE_DIR/system/demo-applications/demo-portal
          rm -rf $DEPLOYMENT/*
          cp Showcase/portal-demo-app/target/*.zip $DEPLOYMENT
          cp Showcase/portal-developer-examples/target/*.iar $DEPLOYMENT
          cp Showcase/portal-components-examples/target/*.iar $DEPLOYMENT
          cp AxonIvyPortal/PortalKitTestHelper/target/*.iar $DEPLOYMENT
          cp Showcase/InternalSupport/target/*.iar $DEPLOYMENT

      
      - name: Run test
        id: run-test        
        run: |
          mvn clean install -f AxonIvyPortal/portal-selenium-test/document_screenshot_pom.xml -Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly-12.0/axonivy-engine-windows.zip -Dtest=com.axonivy.portal.selenium.document.screenshot.LoginScreenshotTest -DbrowserType=FIREFOX -DtrimStackTrace=false -Divy.engine.directory=$ENGINE_DIR -Divy.deploy.timeout.seconds=60 -Divy.engine.start.timeout.seconds=100
        continue-on-error: true

      - name: Check on run test failures
        if: job.steps.run-test.status == failure()
        run: |
          cat AxonIvyPortal/portal-selenium-test/target/testEngineOut.log 
          
      - name: Archive screenshot image
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          retention-days: 5
          path: |
            AxonIvyPortal/portal-selenium-test/target/*.zip
      
      - name: Archive test reports
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-test-reports
          retention-days: 5
          path: |
            /home/runner/work/portal/portal/AxonIvyPortal/portal-selenium-test/target/selenide/reports*
