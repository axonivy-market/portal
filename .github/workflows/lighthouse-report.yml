name: lighthouse-report
run-name: Create Lighthouse Audit
on:
  push:
    branches:
      - feature/IVYPORTAL-17377-Create-pipeline-to-run-Lighthouse-report
  pull_request:
    branches:
      - master

env: # Define reusable environment variables
  ENGINE_DIR: ${{ github.workspace }}/AxonIvyPortal/engine

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Modules
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set Up Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '3.9'

      - name: Prepare Environment
        run: |
          mkdir -p $ENGINE_DIR
          echo "Workspace prepared at ${{ github.workspace }}"

      - name: Download Engine
        run: |
          echo "Downloading engine from ${{ github.event.inputs.engineDownloadURL }}..."
          curl -L ${{ github.event.inputs.engineDownloadURL }} -o engine.zip
          unzip -q engine.zip -d $ENGINE_DIR

      - name: Build Portal Modules
        run: |
          modules=(
            "AxonIvyPortal/portal-components"
            "AxonIvyPortal/portal"
            "AxonIvyPortal/PortalKitTestHelper"
            "Showcase/portal-user-examples"
            "Showcase/portal-developer-examples"
            "Showcase/InternalSupport"
            "Showcase/portal-components-examples"
            "AxonIvyPortal/PortalApp"
            "Showcase/portal-demo-app"
          )
          for module in "${modules[@]}"; do
            echo "Building $module..."
            mvn clean install -f $module/pom.xml -Divy.engine.directory=$ENGINE_DIR
          done

      - name: Deploy Portal Modules
        run: |
          DEPLOYMENT=$ENGINE_DIR/system/demo-applications/demo-portal
          rm -rf $DEPLOYMENT/*
          cp Showcase/portal-demo-app/target/*.zip $DEPLOYMENT
          cp Showcase/portal-developer-examples/target/*.iar $DEPLOYMENT
          cp Showcase/portal-components-examples/target/*.iar $DEPLOYMENT
  lighthouse-audit:
    name: Lighthouse Audit
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install Lighthouse
        run: npm install -g lighthouse
      - name: Wait for Server to Be Ready
        run: |
          for ((i=1; i<=${{ env.WAIT_TIME }}; i++)); do
            if curl -s ${{ env.SERVER_URL }} > /dev/null; then
              echo "Server is ready"
              exit 0
            fi
            echo "Waiting for server..."
            sleep 1
          done
          echo "Server did not start in time" && exit 1
      - name: Execute Lighthouse Audit
        run: lighthouse ${{ env.SERVER_URL }} --output=json --output=html --output-path=${{ env.REPORT_PATH }}
      - name: Upload Audit Report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: ${{ env.REPORT_PATH }}