name: Portal Selenium Test
run-name: ðŸ”† Portal Selenium Test
permissions: read-all
on:
  workflow_dispatch:
    inputs:
      testPatternToRun:
        description: 'Test pattern to run'
        type: string
        default: 'com.axonivy.portal.selenium.test.**.*Test'
        required: true
      engineDownloadURL:
        description: |
          url to download engine, default is the nightly build.
        type: string
        default: 'https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip'
        required: true

env:
  ENGINE_DIR: $GITHUB_WORKSPACE/ivy/engine
  ENGINE_URL: https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip

jobs:
  pull-request-merged:
    runs-on: ubuntu-latest
    steps:
      - name: Show PRs merged into this branch
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.ref;
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: branch,
              state: 'closed',
              per_page: 50,
              page: 1
            });

            const mergedPrs = prs
              .filter(pr => pr.merged_at !== null)
              .sort((a, b) => new Date(b.merged_at) - new Date(a.merged_at))
              .slice(0, 10);

            if (!prs || prs.length === 0) {
              await core.summary
                .addHeading(`ðŸ”— No PRs merged into '${branch}'`)
                .write();
              return;
            }

            await core.summary
              .addHeading(`ðŸ”— PRs merged into '${branch}' (maximum: 10)`)
              .addTable([
                [
                  { data: 'PR Number', header: true },
                  { data: 'Title', header: true },
                  { data: 'Author', header: true },
                  { data: 'Merged At', header: true }
                ],
                ...mergedPrs.map(pr => [
                  `[${pr.number}](${pr.html_url})`,
                  pr.title.replace(/\|/g, '\\|'),
                  `@${pr.user.login}`,
                  new Date(pr.merged_at).toLocaleString('vi-VN', {
                    timeZone: 'Asia/Ho_Chi_Minh',
                    hour12: false
                  })
                ])
              ])
              .write();


  portal-selenium-test:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Java
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '21'

        - name: Set up Maven
          uses: stCarolas/setup-maven@v5
          with:
            maven-version: 3.9.8
      
        - name: Export environment variables
          run: |
            echo "export IVY_JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "export JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "export PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
            
        - name: Set up and verify directories
          run: |
            ENGINE_DIR="${GITHUB_WORKSPACE}/ivy/engine/nightly"
            mkdir -p $ENGINE_DIR
            sudo chown -R $USER:$USER $ENGINE_DIR
            echo "ENGINE_DIR=$ENGINE_DIR" >> $GITHUB_ENV

        - name: Download engine
          run: |
            cd $ENGINE_DIR
            wget $ENGINE_URL -O axonivy-engine.zip
            unzip -o axonivy-engine.zip -d .
            rm axonivy-engine.zip

        - name: Verify engine directory
          run: |
            if [ ! -d "$ENGINE_DIR" ]; then
              echo "Engine directory does not exist"
              exit 1
            fi

        - name: Build Portal modules
          run: |
            modules=(
              "AxonIvyPortal/portal-components"
              "AxonIvyPortal/portal"
              "AxonIvyPortal/PortalKitTestHelper"
              "Showcase/portal-user-examples"
              "Showcase/portal-developer-examples"
              "Showcase/InternalSupport"
              "Showcase/portal-components-examples"
              "AxonIvyPortal/PortalApp"
              "Showcase/portal-demo-app"
            )
            for module in "${modules[@]}"; do
              mvn clean install -f $module/pom.xml -Divy.engine.directory=$ENGINE_DIR
            done

        - name: Deploy Portal Modules
          run: |
            DEPLOYMENT=$ENGINE_DIR/system/demo-applications/demo-portal
            rm -rf $DEPLOYMENT/*
            cp Showcase/portal-demo-app/target/*.zip $DEPLOYMENT
            cp Showcase/portal-developer-examples/target/*.iar $DEPLOYMENT
            cp Showcase/portal-components-examples/target/*.iar $DEPLOYMENT
      
        - name: Run test
          id: run-test        
          run: |
            mvn clean test -f AxonIvyPortal/portal-selenium-test/customized_pom.xml -Divy.engine.download.url=${{ inputs.engineDownloadURL }} -Dtest=${{ inputs.testPatternToRun }} -DbrowserType=FIREFOX -DtrimStackTrace=false -Divy.engine.directory=$ENGINE_DIR -Divy.deploy.timeout.seconds=60 -Divy.engine.start.timeout.seconds=500 -Dsurefire.rerunFailingTestsCount=2
          continue-on-error: true

        - name: Log out on failures
          if: job.steps.run-test.status == failure()
          run: |
            cat AxonIvyPortal/portal-selenium-test/target/testEngineOut.log 

        - name: Archive screenshot image
          uses: actions/upload-artifact@v4
          with:
            name: screenshots
            retention-days: 5
            path: |
              AxonIvyPortal/portal-selenium-test/target/selenide/reports/*

        - name: Archive test reports
          uses: actions/upload-artifact@v4
          with:
            name: selenium-test-reports
            retention-days: 5
            path: |
              AxonIvyPortal/portal-selenium-test/target/surefire-reports/*
        
        - name: List files in surefire-reports
          if: always()
          run: |
            echo "Files in target/surefire-reports:"
            ls -al AxonIvyPortal/portal-selenium-test/target/surefire-reports || echo "Folder not found"
        
        - name: Report
          uses: dorny/test-reporter@v2.0.0
          with:
            artifact: selenium-test-reports
            name: Selenium tests
            path: '*.xml'
            reporter: java-junit
            only-summary: 'false'
