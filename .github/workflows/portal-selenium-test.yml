name: Portal Selenium Test
run-name: 🔆 Portal Selenium Test
permissions: read-all
on:
  workflow_dispatch:
    inputs:
      testPatternToRun:
        description: 'Test pattern to run'
        type: string
        default: 'com.axonivy.portal.selenium.test.**.*Test'
        required: true
      engineDownloadURL:
        description: |
          url to download engine, default is the nightly build.
        type: string
        default: 'https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip'
        required: true

env:
  ENGINE_DIR: $GITHUB_WORKSPACE/ivy/engine
  ENGINE_URL: https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip

jobs:
  show-branch-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 20  # Fetch more commits for history

      - name: Show latest commits on this branch
        uses: actions/github-script@v8
        with:
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            
            try {
              // Get commits specific to this branch by comparing with the default branch
              const { data: defaultBranch } = await github.rest.repos.get({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              
              let commits = [];
              
              if (branch === defaultBranch.default_branch) {
                // If this is the default branch, show recent commits
                const { data: recentCommits } = await github.rest.repos.listCommits({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  sha: context.sha,
                  per_page: 10
                });
                commits = recentCommits;
              } else {
                // For feature branches, show commits that are ahead of the default branch
                const { data: comparison } = await github.rest.repos.compareCommits({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  base: defaultBranch.default_branch,
                  head: branch
                });
                commits = comparison.commits || [];
              }

              if (!commits || commits.length === 0) {
                await core.summary
                  .addHeading(`📝 No new commits found on branch '${branch}'`)
                  .addRaw(branch === defaultBranch.default_branch ? 
                    'This branch has no recent commits.' : 
                    `This branch has no commits ahead of '${defaultBranch.default_branch}'.`)
                  .write();
                return;
              }

              const commitCount = commits.length;
              const maxDisplay = Math.min(commitCount, 10);
              
              await core.summary
                .addHeading(`📝 Latest commits on branch '${branch}' (showing ${maxDisplay} of ${commitCount})`)
                .addTable([
                  [
                    { data: 'Commit', header: true },
                    { data: 'Message', header: true },
                    { data: 'Author', header: true },
                    { data: 'Date', header: true }
                  ],
                  ...commits.slice(0, maxDisplay).map(commit => [
                    `[${commit.sha.substring(0, 7)}](${commit.html_url})`,
                    commit.commit.message.split('\n')[0].replace(/\|/g, '\\|'),
                    `@${commit.author?.login || commit.commit.author.name}`,
                    new Date(commit.commit.author.date).toLocaleString('vi-VN', {
                      timeZone: 'Asia/Ho_Chi_Minh',
                      hour12: false
                    })
                  ])
                ])
                .write();
            } catch (error) {
              console.error('Error fetching commits:', error);
              await core.summary
                .addHeading(`📝 Error fetching commits for branch '${branch}'`)
                .addRaw(`Could not retrieve commit information: ${error.message}`)
                .write();
            }

      - name: Show PRs merged into this branch
        uses: actions/github-script@v8
        with:
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: branch,
              state: 'closed',
              per_page: 50,
              page: 1
            });

            const mergedPrs = prs
              .filter(pr => pr.merged_at !== null)
              .sort((a, b) => new Date(b.merged_at) - new Date(a.merged_at))
              .slice(0, 10);

            if (!prs || prs.length === 0) {
              await core.summary
                .addHeading(`🔗 No PRs merged into '${branch}'`)
                .write();
              return;
            }

            await core.summary
              .addHeading(`🔗 PRs merged into '${branch}' (maximum: 10)`)
              .addTable([
                [
                  { data: 'PR Number', header: true },
                  { data: 'Title', header: true },
                  { data: 'Author', header: true },
                  { data: 'Merged At', header: true }
                ],
                ...mergedPrs.map(pr => [
                  `[${pr.number}](${pr.html_url})`,
                  pr.title.replace(/\|/g, '\\|'),
                  `@${pr.user.login}`,
                  new Date(pr.merged_at).toLocaleString('vi-VN', {
                    timeZone: 'Asia/Ho_Chi_Minh',
                    hour12: false
                  })
                ])
              ])
              .write();


  portal-selenium-test:
      runs-on: ubuntu-latest
      needs: show-branch-info
      steps:
        - name: Checkout code
          uses: actions/checkout@v5

        - name: Set up Java
          uses: actions/setup-java@v5
          with:
            distribution: 'temurin'
            java-version: '21'

        - name: Set up Maven
          uses: stCarolas/setup-maven@v5
          with:
            maven-version: 3.9.8
      
        - name: Export environment variables
          run: |
            echo "export IVY_JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "export JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "export PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
            
        - name: Set up and verify directories
          run: |
            ENGINE_DIR="${GITHUB_WORKSPACE}/ivy/engine/nightly"
            mkdir -p $ENGINE_DIR
            sudo chown -R $USER:$USER $ENGINE_DIR
            echo "ENGINE_DIR=$ENGINE_DIR" >> $GITHUB_ENV

        - name: Download engine
          run: |
            cd $ENGINE_DIR
            wget $ENGINE_URL -O axonivy-engine.zip
            unzip -o axonivy-engine.zip -d .
            rm axonivy-engine.zip

        - name: Verify engine directory
          run: |
            if [ ! -d "$ENGINE_DIR" ]; then
              echo "Engine directory does not exist"
              exit 1
            fi

        - name: Build Portal modules
          run: |
            modules=(
              "AxonIvyPortal/portal-components"
              "AxonIvyPortal/portal"
              "AxonIvyPortal/PortalKitTestHelper"
              "Showcase/portal-user-examples"
              "Showcase/portal-developer-examples"
              "Showcase/InternalSupport"
              "Showcase/portal-components-examples"
              "AxonIvyPortal/PortalApp"
              "Showcase/portal-demo-app"
            )
            for module in "${modules[@]}"; do
              mvn clean install -f $module/pom.xml -Divy.engine.directory=$ENGINE_DIR
            done

        - name: Deploy Portal Modules
          run: |
            DEPLOYMENT=$ENGINE_DIR/system/demo-applications/demo-portal
            rm -rf $DEPLOYMENT/*
            cp Showcase/portal-demo-app/target/*.zip $DEPLOYMENT
            cp Showcase/portal-developer-examples/target/*.iar $DEPLOYMENT
            cp Showcase/portal-components-examples/target/*.iar $DEPLOYMENT
      
        - name: Run test
          id: run-test        
          run: |
            mvn clean test -f AxonIvyPortal/portal-selenium-test/customized_pom.xml -Divy.engine.download.url=${{ inputs.engineDownloadURL }} -Dtest=${{ inputs.testPatternToRun }} -DbrowserType=FIREFOX -DtrimStackTrace=false -Divy.engine.directory=$ENGINE_DIR -Divy.deploy.timeout.seconds=60 -Divy.engine.start.timeout.seconds=500 -Dsurefire.rerunFailingTestsCount=2
          continue-on-error: true

        - name: Log out on failures
          if: steps.run-test.outcome == 'failure'
          run: |
            cat AxonIvyPortal/portal-selenium-test/target/testEngineOut.log 

        - name: Archive screenshot image
          uses: actions/upload-artifact@v4
          with:
            name: screenshots
            retention-days: 5
            path: |
              AxonIvyPortal/portal-selenium-test/target/selenide/reports/*

        - name: Archive test reports
          uses: actions/upload-artifact@v4
          with:
            name: selenium-test-reports
            retention-days: 5
            path: |
              AxonIvyPortal/portal-selenium-test/target/surefire-reports/*

        - name: Show inputs
          run: |
            echo "## Inputs" >> $GITHUB_STEP_SUMMARY
            echo "- Test pattern: ${{inputs.testPatternToRun}}" >> $GITHUB_STEP_SUMMARY
            echo "- Engine download url: ${{inputs.engineDownloadURL}}" >> $GITHUB_STEP_SUMMARY
        
        - name: Report
          uses: dorny/test-reporter@v2.1.1
          with:
            artifact: selenium-test-reports
            name: Selenium tests
            path: '*.xml'
            reporter: java-junit
            only-summary: 'false'
