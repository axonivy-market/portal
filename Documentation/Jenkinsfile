pipeline {

  agent {
    label 'docker'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '2'))
  }

  triggers {
    pollSCM 'H/10 * * * *'
    cron '@midnight'
  }

  stages {    
    stage('build') {
      steps {        
        dir ('Documentation') {
            script {
                def version = 'dev'
                docker.image('maven:3.6.2-jdk-11-slim').inside {
                    version = getCurrentVersion()
                }

                docker.image('axonivy/build-container:read-the-docs-1.2').inside {
                    sh "make -C /doc-build html BASEDIR='${env.WORKSPACE}/Documentation/portal-guide' VERSION=${version}"             
                }

                docker.image('maven:3.6.2-jdk-11-slim').inside {
                    def phase = env.BRANCH_NAME == 'release/8.0' ? 'deploy' : 'install'
                    maven cmd: "clean ${phase}"
                }
            }
            archiveArtifacts '*/build/html/**/*, */target/*.zip'
            recordIssues tools: [sphinxBuild()], unstableTotalAll: 1
        }
      }
    }
  }
}

def getCurrentVersion() {
  def cmd = "mvn help:evaluate -Dexpression=revision -q -DforceStdout"
	def value = sh (script: cmd, returnStdout: true)
	echo "version is $value"
	if (value == "null object or invalid expression") {
	  throw new Exception("could not evaluate maven revision property");
	}
	return value
}
