<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:ic="http://ivyteam.ch/jsf/component" xmlns:p="http://primefaces.org/ui"
  xmlns:pe="http://primefaces.org/ui/extensions"
  xmlns:cc="http://xmlns.jcp.org/jsf/composite" xmlns:jsf="http://xmlns.jcp.org/jsf"
  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions"
  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

<cc:interface componentType="IvyComponent">
  <cc:attribute name="taskWidget" />
</cc:interface>
<cc:implementation>
  <f:event listener="#{logic.initialize(cc.attrs.taskWidget)}" type="preRenderComponent" />
  <div class="task-configuration ui-g">
    <div class="task-configuration__settings filter-container card">
      <div class="ui-g-12">
        You can configure your task widget in this configuration area. <br /> Please define the required filters as well
        as columns to be shown:
      </div>

      <div class="task-configuration__form">
        <div class="ui-g-3">
          <p:outputLabel for="widget-title" value="Widget Title" />
        </div>
        <div class="ui-g-9">
          <p:inputText id="widget-title" styleClass="task-configuration__input-text"
          value="#{cc.attrs.taskWidget.name}" />
        </div>
  
        <div class="ui-g-12" />
    
        <div class="ui-g-4">
          <strong>Available Filters</strong>
        </div>
        <div class="ui-g-8">
          <p:commandButton id="preview-button" value="Preview"
            styleClass="Fright" global="true" update="task-widget-preview-container" />
        </div>

        <div class="ui-g-3">
          <p:outputLabel for="name" value="Task name" />
        </div>
        <div class="ui-g-9">
          <p:inputText id="name" styleClass="task-configuration__input-text"
          value="#{cc.attrs.taskWidget.taskName}" />
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="description" value="Description" />
        </div>
        <div class="ui-g-9">
          <p:inputText id="description" styleClass="task-configuration__input-text"
          value="#{cc.attrs.taskWidget.description}" />
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="priorities" value="Priority" />
        </div>
        <div class="ui-g-9">
          <p:selectCheckboxMenu id="priorities" value="#{cc.attrs.taskWidget.priorities}" label="Priorities" multiple="true"
            filter="true" filterMatchMode="startsWith" panelStyle="width:300px" styleClass="task-configuration__selectcheckboxmenu">
            <f:selectItems value="#{taskWidgetConfigurationPrototypeBean.priorities}" />
          </p:selectCheckboxMenu>
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="states" value="State" />
        </div>
        <div class="ui-g-9">
          <p:selectCheckboxMenu id="states" value="#{cc.attrs.taskWidget.states}" label="States" multiple="true"
            filter="true" filterMatchMode="startsWith" panelStyle="width:300px" styleClass="task-configuration__selectcheckboxmenu">
            <f:selectItems value="#{taskWidgetConfigurationPrototypeBean.filteredStates}" />
          </p:selectCheckboxMenu>
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="responsibles" value="Responsibles" />
        </div>
        <div class="ui-g-9">
          <p:autoComplete id="responsibles" scrollHeight="210" dropdown="true" size="35"
            completeMethod="#{taskWidgetConfigurationPrototypeBean.completeResponsibles}" value="#{cc.attrs.taskWidget.responsibles}"
            var="responsible" itemValue="#{responsible}" itemLabel="#{responsible.briefDisplayNameWithState}"
            converter="pojoConverter" cache="true" maxResults="100" multiple="true"
            moreText="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/common/more')}..." dynamic="true"
            styleClass="task-configuration__responsibles" forceSelection="true">
            <p:column>
              <i class="fa #{responsible.isUser() ? 'fa-user' : 'fa-users'} u-mar-right-5" />
              <h:outputText value="#{taskWidgetConfigurationPrototypeBean.formatName(responsible)}" />
            </p:column>
          </p:autoComplete>
        </div>
        <div class="ui-g-3" />
        <div class="ui-g-9">
          <span style="width: 10%; display: inline-block" />
          <p:selectBooleanCheckbox id="can-work-on" value="#{cc.attrs.taskWidget.canWorkOn}" itemLabel="Can work on" />
        </div>
  
        <div class="ui-g-3">
          <p:outputLabel for="created-from" value="Created From" />
        </div>
        <div class="ui-g-9">
          <p:calendar id="created-from" showOn="button" styleClass="task-configuration__calendar"
          value="#{cc.attrs.taskWidget.createdDateFrom}" />
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="created-to" value="Created To" />
        </div>
        <div class="ui-g-9">
          <p:calendar id="created-to" showOn="button" styleClass="task-configuration__calendar"
          value="#{cc.attrs.taskWidget.createdDateTo}" />
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="expiry-from" value="Expiry From" />
        </div>
        <div class="ui-g-9">
          <p:calendar id="expiry-from" showOn="button" styleClass="task-configuration__calendar"
          value="#{cc.attrs.taskWidget.expiryDateFrom}" />
        </div>
    
        <div class="ui-g-3">
          <p:outputLabel for="expiry-to" value="Expiry To" />
        </div>
        <div class="ui-g-9">
          <p:calendar id="expiry-to" showOn="button" styleClass="task-configuration__calendar"
          value="#{cc.attrs.taskWidget.expiryDateTo}" />
        </div>
        
        <div class="ui-g-3">
          <p:outputLabel for="category" value="Category" />
        </div>
        <div class="ui-g-9">
          <p:inputText id="category" styleClass="task-configuration__input-text" />
        </div>
      </div>
    </div>
    <h:panelGroup id="task-widget-preview-container" styleClass="card task-configuration__layout-container">
      <div class="ui-g">
        <h2 class="ui-g-12 task-configuration__header">Preview</h2>
        <ic:ch.ivy.addon.portal.generic.prototype.PreviewTaskWidget id="task-widget-preview" taskWidget="#{cc.attrs.taskWidget}" />
      </div>
    </h:panelGroup>
  </div>
</cc:implementation>
</html>