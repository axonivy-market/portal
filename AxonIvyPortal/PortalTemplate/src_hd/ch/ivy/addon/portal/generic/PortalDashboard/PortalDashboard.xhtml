<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:ic="http://ivyteam.ch/jsf/component" xmlns:p="http://primefaces.org/ui"
  xmlns:pe="http://primefaces.org/ui/extensions" xmlns:fn="http://java.sun.com/jsp/jstl/functions">
<h:body>
  <ui:composition template="/layouts/BasicTemplate.xhtml">
    <ui:define name="title">Dashboard</ui:define>
    <ui:define name="pageContent">
      <style type="text/css">
        .new-widget-container .ui-grid.ui-grid-responsive {
          padding: 0;
          border: none;
        }
        .header {
          padding: 10px;
          font-size: 18px;
          border-bottom: 2px solid lightgrey;
          font-weight: bold;
        }
        .ui-resizable-handle {
          color: var(--primary-color);
        }
        .card {
          padding: 0;
        }
        .actions {
          float: right;
        }
        .one-dashboard {
          border: none !important;
        }
        .one-dashboard > a {
          color: black !important;
        }
      </style>
      <p:tabView id="grid-stack-tab-view" value="#{dashboardBean.dashboards}" var="dashboard" dynamic="true">
        <p:ajax event="tabChange" listener="#{dashboardBean.onTabChange}" oncomplete="loadGrid()" />
        <p:tab title="#{dashboard.title}" titleStyleClass="#{dashboardBean.dashboards.size() eq 1 ? 'one-dashboard' :''}"
          titleStyle="font-size: 18px">
          <h:panelGroup id="grid-stack" layout="block" styleClass="grid-stack" style="background-color: var(--ivy-primary-color-grey-pale)">
            <ui:repeat var="widget" value="#{dashboard.widgets}" varStatus="status">
              <div class="grid-stack-item" data-gs-x="#{widget.x}" data-gs-y="#{widget.y}" data-gs-id="#{widget.id}"
                data-gs-width="#{widget.width}" data-gs-height="#{widget.height}" data-gs-autoPosition="#{widget.autoPosition}">
                <div class="grid-stack-item-content card" style="display: flex;flex-direction: column;">
                  <h:panelGroup rendered="#{fn:startsWith(widget.id, 'task')}">
                    <div class="header" style="flex: 0 0 30px">
                      <span class="title">
                        <i class="fa fa-arrows drag-handler u-mar-right-5" style="cursor: move; color: var(--primary-color);" data-action="Drag" /> 
                        #{not empty widget.name ? widget.name : 'Your Tasks'}
                      </span>
                      
                      <div class="actions">
                        <p:commandLink styleClass="u-mar-right-5">
                          <i class="fa fa-info-circle" />
                        </p:commandLink>
                        <p:commandLink styleClass="u-mar-right-5" onclick="PF('task-widget-configuration-dialog-#{widget.id}').show()" global="false" immediate="true">
                          <i class="fa fa-pencil" />
                        </p:commandLink>
                        <p:commandLink>
                          <i class="fa fa-arrow-right" />
                        </p:commandLink>
                      </div>
                    </div>
                    <h:panelGroup styleClass="#{widget.id}" style="flex: auto;overflow:auto;margin-bottom: 20px;padding:10px" layout="block">
                      <ic:ch.ivy.addon.portal.generic.prototype.TaskWidget taskWidget="#{widget}" />
                    </h:panelGroup>
                    <ic:ch.ivy.addon.portal.generic.prototype.TaskWidgetConfiguration taskWidget="#{widget}" componentToUpdate="@(.#{widget.id})" />
                  </h:panelGroup>
                    
                  <h:panelGroup rendered="#{fn:startsWith(widget.id, 'process')}">
                    <div class="header" style="flex: 0 0 30px">
                      <span class="title">
                        <i class="fa fa-arrows drag-handler u-mar-right-5" style="cursor: move; color: var(--primary-color);" data-action="Drag" /> 
                        #{not empty widget.name ? widget.name : 'Your Processes'}
                      </span>
                      
                      <div class="actions">
                        <p:commandLink>
                          <i class="fa fa-arrow-right" />
                        </p:commandLink>
                      </div>
                    </div>
                    <div style="flex: auto;overflow:auto;margin-bottom: 20px;padding:10px">
                      <ic:ch.ivy.addon.portalkit.component.UserProcessWidget id="process-widget-component" />
                    </div>
                  </h:panelGroup>
                  
                  <h:panelGroup id="actions" layout="block" style="text-align: center; padding-top: 4px" rendered="#{widget.id eq 'action'}">
                    <i class="fa fa-arrows drag-handler" data-action="Drag" 
                      style="cursor: move; position: absolute; top: 5px; left: 5px;color: var(--primary-color);font-size: 18px;" />
                    <p:commandButton id="add-widget-button" value="Add a new widget" type="button" style="margin-bottom: 5px"
                      onclick="PF('new-widget-dialog').show()" />
                    <br />
                    <p:commandLink id="restore-button" value="Restore default widgets" actionListener="#{dashboardBean.restore()}"
                      update="grid-stack-tab-view:#{dashboardBean.dashboards.indexOf(dashboard)}:grid-stack" oncomplete="loadGrid()" />
                  </h:panelGroup>
                </div>
              </div>
            </ui:repeat>
          </h:panelGroup>
        </p:tab>
      </p:tabView>

      <h:form>
        <p:remoteCommand name="saveConfigurationCommand" actionListener="#{dashboardBean.save()}" global="false" />
      </h:form>
      <script type="text/javascript">
        var grids;
        loadGrid();
        
        function loadGrid() {
          grids = GridStack.initAll({
            column: 12, 
            handleClass :'drag-handler', 
            resizable: {
              handles: 'e, se, s, sw, w'
            }
          });
          
          grids.forEach(function (grid, i) {
            grid.on('change', function() {
              var serializedData = [];
              grid.engine.nodes.forEach(function(node) {
                serializedData.push({
                  type: node.id.split('_')[0],
                  id: node.id,
                  x: node.x,
                  y: node.y,
                  width: node.width,
                  height: node.height
                });
              });
              saveConfigurationCommand([{
                name : 'nodes',
                value : JSON.stringify(serializedData, null, '')
              }]);
            });
          });
        }
      </script>
      <p:dialog id="new-widget-dialog" widgetVar="new-widget-dialog" header="Create a Widget" appendTo="@(body)"
        closeOnEscape="true" draggable="false" fitViewport="true" responsive="true" modal="true">

        <p:dataGrid id="new-widget-container" var="sample" value="#{dashboardBean.samples}" layout="grid" columns="2"
          styleClass="new-widget-container">
          <p:panel header="#{sample.name}" style="text-align:center;" styleClass="widget-selection">
            <h:panelGrid columns="1">
              <p:graphicImage library="images" name="#{sample.image}" width="500px" height="350px" />
              <p:link href="#" value="Select" rendered="#{sample.type ne 'TASK'}" />
              <p:link href="#" value="Select" rendered="#{sample.type eq 'TASK'}"
                onclick="PF('create-task-widget-dialog').show(); PF('new-widget-dialog').hide();" />
            </h:panelGrid>
          </p:panel>
        </p:dataGrid>

        <f:facet name="footer">
          <p:commandButton id="new-widget-close-button" value="Close" type="button"
            onclick="PF('new-widget-dialog').hide()" />
        </f:facet>
      </p:dialog>
      <ic:ch.ivy.addon.portal.generic.prototype.CreateTaskWidgetDialog />
    </ui:define>
  </ui:composition>
</h:body>
</html>