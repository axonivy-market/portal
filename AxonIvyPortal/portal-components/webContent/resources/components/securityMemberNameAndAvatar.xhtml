<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:cc="http://xmlns.jcp.org/jsf/composite" xmlns:p="http://primefaces.org/ui"
  xmlns:pc="http://xmlns.jcp.org/jsf/composite/components"
  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
  

<cc:interface>
  <cc:attribute name="isShowAvatar" default="#{portalComponentAvatarBean.getPortalShowAvatarSettingOrDefault(true)}" />
  <cc:attribute name="id" />
  <cc:attribute name="displayNameId" default="username" />
  <cc:attribute name="displayName" required="true" />
  <cc:attribute name="displayNameRendered" default="true" />
  <cc:attribute name="securityMember" required="true" />
  <cc:attribute name="displayNameStyleClass" />
  <cc:attribute name="containerStyleClass" />
  <cc:attribute name="representName" />
  <cc:attribute name="isStandAlone" default="true" />
  <cc:attribute name="isShowTechnicalDisplayNameOnTooltip" default="#{portalComponentAvatarBean.getPortalShowTechnicalTooltipOrDefault(false)}" />
</cc:interface>

<cc:implementation>
  <h:outputStylesheet library="css" name="portal-components-utility.css" />
  <h:outputStylesheet library="css" name="security-member-avatar-component.css" />

  <c:set var="tooltipTechnicalDisplayName"
    value="#{cc.attrs.isShowTechnicalDisplayNameOnTooltip ? portalComponentAvatarBean.tooltipTechnicalDisplayName(cc.attrs.securityMember) : cc.attrs.displayName}" />
  <div id="#{cc.attrs.id}" class="#{cc.attrs.isShowAvatar ? 'has-avatar' : ''} #{cc.attrs.containerStyleClass}">
    <pc:avatar securityMember="#{cc.attrs.securityMember}" rendered="#{cc.attrs.securityMember != null or cc.attrs.representName != null}" renderedAvatar="#{cc.attrs.isShowAvatar}" representName="#{cc.attrs.representName}"/>
    <cc:renderFacet name="alternativeAvatar" />
    <h:outputText id="#{cc.attrs.displayNameId}" value="#{cc.attrs.displayName}"
      rendered="#{cc.attrs.displayNameRendered and !userMenuBean.isMobileDevice()}"
      styleClass="#{cc.attrs.isShowAvatar ? 'name-after-avatar' : ''} #{cc.attrs.displayNameStyleClass} #{(cc.attrs.securityMember == null and cc.attrs.representName == null) ? 'u-no-padding-left' : ''}">
    </h:outputText>
    <p:tooltip for="#{cc.attrs.displayNameId}"
      value="#{tooltipTechnicalDisplayName}"
      trackMouse="true"
      hideEvent="mouseleave click"
      rendered="#{cc.attrs.displayNameRendered and !userMenuBean.isMobileDevice()}" />
    <cc:renderFacet name="afterName" />
  </div>
</cc:implementation>
</html>