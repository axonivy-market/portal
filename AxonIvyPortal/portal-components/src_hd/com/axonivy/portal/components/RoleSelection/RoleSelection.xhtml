<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:cc="http://xmlns.jcp.org/jsf/composite" xmlns:ic="http://ivyteam.ch/jsf/component"
  xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions"
  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:pc="http://xmlns.jcp.org/jsf/composite/components">

<cc:interface componentType="IvyComponent">
  <!-- autoComplete attributes -->
  <cc:attribute name="componentId" default="role-selection" />
  <cc:attribute name="selectedRole" type="com.axonivy.portal.components.dto.RoleDTO" required="true" />
  <cc:attribute name="fromRoleNames" type="java.util.List"
    shortDescription="Child Role list will be loaded based on this list. All roles will be loaded if you don't define." />
  <cc:attribute name="excludedRoleNames" type="java.util.List"
    shortDescription="Roles will be excluded from role selection. Do not use if don't use default completeMethod" />
  <cc:attribute name="requiredMessage"
    default="#{ivy.cms.co('/Dialogs/com/axonivy/portal/components/Common/RequiredFieldMessage')}" />
  <cc:attribute name="forceSelection" default="true"
    shortDescription="Only accepts role from the list when it’s enabled." />
  <cc:attribute name="minQueryLength" default="1"
    shortDescription="Number of characters to be typed before starting to query." />
  <cc:attribute name="isDisabled" shortDescription="Disable Role Selection." />
  <cc:attribute name="isRequired" shortDescription="Marks Role Selection as required." />
  <cc:attribute name="isReadOnly" shortDescription="Cannot change role when it’s enabled." />
  <cc:attribute name="hightlight" default="true" shortDescription="Highlights the first suggested role automatically." />
  <cc:attribute name="size" shortDescription="Number of characters used to determine the width of the input element." />
  <cc:attribute name="itemLabel" default="#{role.getDisplayName() != '' ? role.getDisplayName() : role.getMemberName()}"
    shortDescription="Displayed text of selected role item and roles in dropdown list." />
  <cc:attribute name="scrollHeight" default="390" shortDescription="scrollHeight attribute of primefaces autocomplete." />
  <cc:attribute name="inputStyleClass" shortDescription="Style class of role autocomplete input." />
  <cc:attribute name="autoCompleteStyleClass" shortDescription="Style class of role autocomplete." />
  <cc:attribute name="autoCompletePanelStyleClass" shortDescription="Style class of role autocomplete panel." />
  <cc:attribute name="completeMethod" method-signature="java.util.List completeMethod(java.lang.String)" />
  <cc:attribute name="cache" default="true"
    shortDescription="Autocomplete caches the searched result list if it's enabled." />
  <cc:attribute name="moreText" default="#{ivy.cms.co('/Dialogs/com/axonivy/portal/components/Common/More')}..." />
  <cc:attribute name="queryDelay" default="300" />
  <cc:attribute name="maxResults" default="100" type="java.lang.Integer" />
  <cc:attribute name="hasCustomizedSelectionList" default="false" />
  <cc:attribute name="emptyMessage" shortDescription="Message to show when there's no option in selection list." default="#{ivy.cms.co('/Labels/NoResults')}" />

  <!-- Avatar in Selection list attributes  -->
  <cc:attribute name="isShowAvatarInSelectionList" default="#{portalComponentAvatarBean.getPortalShowAvatarSettingOrDefault(true)}" />
  <cc:attribute name="displayNameRenderedInSelectionList" default="true" />
  <cc:attribute name="displayNameInSelectionListStyleClass" />
  <cc:attribute name="selectionListContainerStyleClass" />

  <!-- Label attributes -->
  <cc:attribute name="label" shortDescription="Text of label for Role selection component." />
  <cc:attribute name="floatingLabel"
    shortDescription="Display label with floating style and labelPanelStyleClass can't be applied if it’s enabled." />
  <cc:attribute name="labelPanelStyleClass" shortDescription="Style class of label panel." />
  <cc:attribute name="labelStyleClass" shortDescription="Style class of label." />
  <cc:attribute name="appendOption" shortDescription="Defines the additional information to append to the role selection display, such as parent name or blank.Value: NONE, PARENT_NAME" />

  <!-- Message attributes -->
  <cc:attribute name="isRenderedMessage" default="true"
    shortDescription="Specify the rendering of message for role field." />
  <cc:attribute name="messageStyleClass" shortDescription="Style class of message." />
</cc:interface>

<cc:implementation>
  <h:outputStylesheet library="css" name="role-selection-component.css" />

  <h:panelGroup id="#{cc.attrs.componentId}-label-panel" layout="block"
    rendered="#{not empty cc.attrs.label and !cc.attrs.floatingLabel}"
    styleClass="#{cc.attrs.labelPanelStyleClass}">
    <p:outputLabel id="#{cc.attrs.componentId}-label" value="#{cc.attrs.label}" for="#{cc.attrs.componentId}"
      styleClass="#{cc.attrs.labelStyleClass}" />
  </h:panelGroup>

  <c:set var="completeMethod" value="#{not empty cc.attrs.completeMethod ? cc.attrs.completeMethod : roleSelectionBean.completeRoleMethod}" />
  <h:panelGroup id="#{cc.attrs.componentId}-autocomplete-panel" layout="block"
    styleClass="role-selection-panel #{cc.attrs.autoCompletePanelStyleClass} ui-float-label">
    <p:autoComplete id="#{cc.attrs.componentId}"
      value="#{cc.attrs.selectedRole}"
      scrollHeight="#{cc.attrs.scrollHeight}"
      completeMethod="#{completeMethod}"
      required="#{cc.attrs.isRequired}"
      var="role"
      size="#{cc.attrs.size}"
      itemValue="#{role}"
      itemLabel="#{cc.attrs.itemLabel}"
      forceSelection="#{cc.attrs.forceSelection}"
      minQueryLength="#{cc.attrs.minQueryLength}"
      styleClass="#{cc.attrs.autoCompleteStyleClass}"
      autoHighlight="#{cc.attrs.hightlight}"
      converter="pojoConverter"
      cache="#{cc.attrs.cache}"
      dynamic="true"
      dropdown="true"
      disabled="#{cc.attrs.isDisabled}"
      readonly="#{cc.attrs.isReadOnly}"
      requiredMessage="#{cc.attrs.requiredMessage}"
      moreText="#{cc.attrs.moreText}"
      queryDelay="#{cc.attrs.queryDelay}"
      maxResults="#{cc.attrs.maxResults}"
      emptyMessage="#{cc.attrs.emptyMessage}"
      inputStyleClass="#{cc.attrs.inputStyleClass}">
      <p:column rendered="#{!cc.attrs.hasCustomizedSelectionList}">
        <pc:securityMemberNameAndAvatar displayName="#{cc.attrs.appendOption eq 'PARENT_NAME' ? role.roleWithParentName : role.displayName}" securityMember="#{role}" isStandAlone="false"
          isShowAvatar="#{cc.attrs.isShowAvatarInSelectionList}" displayNameRendered="#{cc.attrs.displayNameRenderedInSelectionList}"
          displayNameStyleClass="#{cc.attrs.displayNameInSelectionListStyleClass}" containerStyleClass="#{cc.attrs.selectionListContainerStyleClass}" />
      </p:column>
      <cc:insertFacet name="event" />
      <cc:insertChildren />
    </p:autoComplete>
    <p:outputLabel id="#{cc.attrs.componentId}-floating-label"
      value="#{cc.attrs.label}"
      for="#{cc.attrs.componentId}"
      styleClass="#{cc.attrs.labelStyleClass}"
      rendered="#{cc.attrs.floatingLabel}" />
  </h:panelGroup>
  <h:panelGroup layout="block"
    styleClass="#{cc.attrs.messageStyleClass} #{cc.attrs.floatingLabel ? 'message-for-floating-label' : ''}">
    <p:message id="#{cc.attrs.componentId}-message"
      for="#{cc.attrs.componentId}" rendered="#{cc.attrs.isRenderedMessage}"/>
  </h:panelGroup>
</cc:implementation>
</html>