<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:h="http://xmlns.jcp.org/jsf/html"
  xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:ic="http://ivyteam.ch/jsf/component" xmlns:p="http://primefaces.org/ui"
  xmlns:pe="http://primefaces.org/ui/extensions" xmlns:cc="http://xmlns.jcp.org/jsf/composite" xmlns:jsf="http://xmlns.jcp.org/jsf"
  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions" xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

<cc:interface componentType="IvyComponent">
  <cc:attribute name="caseWidget" />
  <cc:attribute name="managedBean" />
  <cc:attribute name="componentToUpdate" />
  <cc:attribute name="isReadOnlyMode" default="false"/>
</cc:interface>

<cc:implementation>
  <f:event listener="#{caseWidgetConfigurationFilterBean.preRender(cc.attrs.caseWidget)}" type="preRenderComponent" />
  <ui:decorate template="/layouts/restricted/decorator/SidebarWidgetConfiguration.xhtml">
    <ui:param name="widget" value="#{cc.attrs.caseWidget}" />
    <ui:param name="managedBean" value="#{cc.attrs.managedBean}" />
    <ui:param name="filterContainerStyleClass" value="case-widget-filter case-widget-configuration filter-messages predefined-filter" />
    <ui:param name="componentToUpdateOnPreview" value="widget-preview configuration-filter-messages-panel" />

    <ui:define name="widgetFilterContent">
      <h:panelGroup id="configuration-filter-messages-panel" layout="block" styleClass="ui-g-12 u-padding-0">
        <p:messages id="filter-messages" />
      </h:panelGroup>
      <h:panelGroup id="predefined-filter" layout="block" styleClass="ui-g dashboard-widget-filter__main-panel">
        <c:set var="filterComponentToUpdate" value="predefined-filter" />
        <ui:repeat id="filter-list" var="filter" value="#{widget.filters}" varStatus="status">
          <ic:com.axonivy.portal.dashboard.component.filter.DashboardFilter id="filter-component" filter="#{filter}" widget="#{widget}"
            managedBean="#{caseWidgetConfigurationFilterBean}"
            componentToUpdate="#{p:resolveFirstComponentWithId(filterComponentToUpdate, view).clientId}"
            filterIndex="#{status.index}" readOnly="false"
            messageId="filter-messages"
            onCompleteRemoveFilter="PF('new-widget-configuration-dialog').initPosition();" />
        </ui:repeat>
        <div class="ui-g-12 u-padding-0 MarTop10">
          <p:commandButton id="add-filter" icon="#{visibilityBean.generateButtonIcon('si si-add-circle')}"
            update="predefined-filter" process="predefined-filter" styleClass="u-mar-right-5 ui-button-flat"
            actionListener="#{caseWidgetConfigurationFilterBean.addNewFilter(widget)}"
            ariaLabel="#{ivy.cms.co('/Dialogs/com/axonivy/portal/dashboard/component/CaseWidgetConfiguration/AddFilter')}"
            value="#{ivy.cms.co('/Dialogs/com/axonivy/portal/dashboard/component/CaseWidgetConfiguration/AddFilter')}"
            title="#{ivy.cms.co('/Dialogs/com/axonivy/portal/dashboard/component/CaseWidgetConfiguration/AddFilter')}">
            <f:param name="skipValidator" value="true" />
          </p:commandButton>
        </div>
      </h:panelGroup>
    </ui:define>

    <ui:param name="widgetPreviewStyleClass" value="case-preview" />
    <ui:define name="widgetPreviewContent">
      <ic:ch.ivy.addon.portal.generic.dashboard.component.ColumnManagement id="column-management-component" widget="#{widget}"
        componentToUpdate="#{cc.attrs.componentToUpdate}" />
      <ic:ch.ivy.addon.portal.generic.dashboard.component.CaseWidget id="case-widget-preview" isReadOnlyMode="#{cc.attrs.isReadOnlyMode}"
        caseWidget="#{widget}" renderColumnConfiguration="false" isPreviewMode="true" caseWidgetVar="dashboard-cases-configuration" componentToUpdateCaseWidget="@widgetVar(dashboard-cases-configuration-#{widget.id})"
        onCompleteLoadWidget="setTimeout(function() { PF('new-widget-configuration-dialog').initPosition(); }, 100); initTableWidget(PF('dashboard-cases-configuration-#{widget.id}'));"/>
    </ui:define>

    <ui:define name="multiLanguageDialog">
      <ic:ch.ivy.addon.portal.generic.dashboard.component.MultiLanguageConfiguration id="title-language-config"
      	titles="#{managedBean.widget.names}"
      	managedBean="#{managedBean}" dynamic="true"
      	componentToUpdateOnCreate="#{cc.attrs.componentToUpdate}"/>
    </ui:define>
  </ui:decorate>

</cc:implementation>
</html>