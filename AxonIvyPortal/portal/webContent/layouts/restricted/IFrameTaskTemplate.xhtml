<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:ic="http://ivyteam.ch/jsf/component" xmlns:p="http://primefaces.org/ui"
  xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:pe="http://primefaces.org/ui/extensions">
<h:body>
  <ui:composition template="/layouts/restricted/AbstractTaskTemplate.xhtml">
    <!-- THIS TEMPLATE IS ONLY USED BY PORTAL. DON'T USE IT. -->
    <!-- Follow the comments to know how to pass the params in your HTML dialog to Portal area outside IFrame. -->
    
    <!-- Available params in this template: -->
    <!-- taskName: Custom text for task name -->
    <!-- taskIcon: Task icon to be displayed, using Streamline or Awesome font, e.g., `si si-arrow-right` -->
    <!-- isHideTaskName: Hide task name, false (default) or true -->
    <!-- caseId: ID of case to be displayed in case information dialog -->
    <!-- isHideCaseInfo: Hide `Show Information` button, false (default) or true -->
    <!-- currentProcessStep: Current process step, could be the index of the step or the step name -->
    <!-- processSteps: List of process steps, e.g., `[&quot;Create Investment Request&quot;, &quot;Approve Investment Reques&quot;]` -->
    <!--   or `#{portalComponentUtilsBean.convertToJSON(data.steps)}` -->
    <!-- isShowAllSteps: Shows all steps on large screens, false (default) or true -->
    <!-- processChainDirection: VERTICAL or HORIZONTAL (default) -->
    <!-- processChainShape: LINE or CIRCLE (default) -->
    <!-- isHideTaskAction: Hide task action button, false (default) or true -->
    <!-- isWorkingOnATask: Working on a task in order to display warning when leaving page, false or true (default) -->
    <!-- announcementInvisible: Make announcement invisible, false or true (default) -->
    <!-- isCardFrame: Display content of the IFrame inside a card style -->
    <!-- viewName: Custom breadcrum, value could be HOME, PROCESS, TASK, TASK_DETAIL, CASE_DETAIL, CASE, TECHNICAL_CASE, RELATED_TASK, USER_PROFILE, -->
    <!--   ABSENCES_MANAGEMENT, DASHBOARD_CONFIGURATION, EDIT_DASHBOARD_DETAILS, PROCESS_VIEWER, PORTAL_MANAGEMENT, NOTIFICATION -->

    <!-- You could configure UI in either of these two ways -->
    <!-- 1. Using component IFrameTaskConfig, this way is recommended -->
    <!--   <ic:com.axonivy.portal.components.IFrameTaskConfig  -->
    <!--     taskName="Approve Investment"  -->
    <!--     taskIcon="si si-bulb" -->
    <!--     isHideTaskName="false" -->
    <!--     caseId="55"  -->
    <!--     isHideCaseInfo="false" -->
    <!--     currentProcessStep="1" -->
    <!--     processSteps='["Create Investment Request", "Approve Investment Request"]' -->
    <!--     isShowAllSteps="true" -->
    <!--     processChainDirection="VERTICAL" -->
    <!--     processChainShape="LINE" -->
    <!--     isHideTaskAction="true" -->
    <!--     isWorkingOnATask="false" -->
    <!--     announcementInvisible="false" -->
    <!--     isCardFrame="true" -->
    <!--     viewName="TASK_DETAIL" -->
    <!--   /> -->

    <!-- 2. Using Javascript -->
    <!--   <script> -->
    <!--     window.taskName = "Approve Investment"; -->
    <!--     window.taskIcon = "si bulb"; -->
    <!--     window.isHideTaskName = false; -->
    <!--     window.caseId = 123456; -->
    <!--     window.isHideCaseInfo = false; -->
    <!--     window.currentProcessStep = 0; -->
    <!--     window.currentProcessStep = #{data.currentProcessStep}; -->
    <!--     window.currentProcessStep = "#{data.currentProcessStep}"; -->
    <!--     // Set process steps directly as Array. -->
    <!--     window.processSteps = ["Create Investment Request", "Approve Investment Request"]; -->
    <!--     // If process steps are set in HTML dialog logic or java code, convert it to JSON format -->
    <!--     // Use this code if process steps are a java String list -->
    <!--     window.processSteps = #{portalComponentUtilsBean.convertToJSON(data.steps)}; -->
    <!--     window.isShowAllSteps = true; -->
    <!--     window.processChainDirection = "VERTICAL"; -->
    <!--     window.processChainShape = "LINE"; -->
    <!--     window.isHideTaskAction = false; -->
    <!--     window.isWorkingOnATask = false; -->
    <!--     window.announcementInvisible = false; -->
    <!--     window.isCardFrame = true; -->
    <!--     window.viewName = TASK_DETAIL; -->
    <!--   </script> -->

    <ui:param name="contentContainerStyleClass" value="task-frame-container js-task-frame-container" />
    <ui:param name="layoutContentStyleClass" value="frame-container" />
    <ui:param name="abstractTaskTemplateBean" value="#{iFrameTaskTemplateBean}" />
    <ui:param name="actualStepIndex" value="#{iFrameTaskTemplateBean.currentProcessStep}" />
    <ui:param name="stepIndexes" value="#{iFrameTaskTemplateBean.stepIndexes}" />
    <ui:param name="steps" value="#{iFrameTaskTemplateBean.processSteps}" />
    <ui:param name="isShowAllSteps" value="#{iFrameTaskTemplateBean.isShowAllSteps}" />
    <ui:param name="isHideCaseInfo" value="#{iFrameTaskTemplateBean.isHideCaseInfo}" />
    <ui:param name="isHideTaskName" value="#{iFrameTaskTemplateBean.isHideTaskName}" />
    <ui:param name="isHideTaskAction" value="#{iFrameTaskTemplateBean.isHideTaskAction}" />
    <ui:param name="isWorkingOnATask" value="#{iFrameTaskTemplateBean.isWorkingOnATask}" />
    <ui:param name="processChainDirection" value="#{iFrameTaskTemplateBean.processChainDirection}" />
    <ui:param name="processChainShape" value="#{iFrameTaskTemplateBean.processChainShape}" />
    <ui:param name="announcementInvisible" value="#{iFrameTaskTemplateBean.announcementInvisible}" />
    <ui:param name="caseId" value="#{iFrameTaskTemplateBean.caseId}" />
    <ui:param name="announcementStyleClass" value="annoucement-in-frame-template js-annoucement-in-frame-template u-invisibility" />
    <ui:param name="taskTemplateContainerStyleClass" value="u-invisibility" />
    <ui:param name="viewName" value="#{iFrameTaskTemplateBean.viewName}"/>
    <ui:param name="taskName" value="#{iFrameTaskTemplateBean.taskName}" />
    <ui:param name="taskIcon" value="#{iFrameTaskTemplateBean.taskIcon}" />

    <ui:define name="content">
      <h:form>
        <p:remoteCommand name="redirectToEndPageCommand" actionListener="#{iFrameTaskTemplateBean.navigateToEndPage()}" />
        <p:remoteCommand name="displayPortalGrowlMessageCommand" actionListener="#{iFrameTaskTemplateBean.displayPortalGrowlMessage()}" />
        <p:remoteCommand name="redirectToUrlCommand" actionListener="#{iFrameTaskTemplateBean.navigateToUrl()}" />
        <p:remoteCommand name="useTaskInIFrame" actionListener="#{iFrameTaskTemplateBean.useTaskInIFrame()}" update="@([id$='portal-global-growl']) @([id$='layout-topbar-menu-wrapper']) @([id$='title'])"/>
        <p:remoteCommand name="getDataFromIFrame" actionListener="#{iFrameTaskTemplateBean.getDataFromIFrame()}"
          update="@([id$='header-container']) @([id$='announcement-container']) @([id$='task-leave-warning-dialog']) @([id$='task-leave-warning-component']) @([id$='left-menu']) @([id$='logout-setting']) @([id$='breadcrumb-container'])" 
          oncomplete="resizeIFrame();updateContentContainerClass()" global="false" />
        <p:remoteCommand name="keepSessionInIFrame" global="false" process="@this" update="@this"
          oncomplete="PortalSessionWarning.resetCounterAndTimeout();" />
      </h:form>

      <iframe id="iFrame" src="#{url}" class="task-frame" 
        title="#{ivy.cms.co('/Dialogs/com/axonivy/portal/layouts/IFrameTaskTemplate/TaskIFrameTitle')}" />
    </ui:define>

    <ui:define name="javascript">
      <h:outputScript name="iframe-task-template.js" library="js" />
    </ui:define>
  </ui:composition>
</h:body>
</html>