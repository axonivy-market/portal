<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:cc="http://xmlns.jcp.org/jsf/composite" xmlns:ic="http://ivyteam.ch/jsf/component"
  xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions"
  xmlns:pm="http://primefaces.org/mobile">

<cc:interface componentType="IvyComponent">
  <cc:attribute name="clientSideTimeOut" />
</cc:interface>
<cc:implementation>

  <p:confirmDialog id="timeout-warning-dialog" header="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/common/warning')}"
    message="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/warningBeforeLostSession/warningMessage')}"
    widgetVar="timeout-warning-dialog" appendTo="@(body)" closable="false" width="auto">
    <p:commandButton value="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/warningBeforeLostSession/extend')}"
      styleClass="portal-ok-button" oncomplete="PF('timeout-warning-dialog').hide()"
      actionListener="#{logic.extendSession}" />
    <p:commandButton value="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/warningBeforeLostSession/logout')}"
      styleClass="portal-cancel-button" actionListener="#{logic.logout}" oncomplete="returnHomePage()" />
  </p:confirmDialog>

  <h:form>
    <p:remoteCommand id="logout-and-show-dialog" name="logoutAndShowDialog" actionListener="#{logic.logout}"
      onstart="PF('timeout-warning-dialog').hide()" oncomplete="PF('viewExpiredExceptionDialog').show()" />
  </h:form>
  <script type="text/javascript">
      var timeout = "#{cc.attrs.clientSideTimeOut}";
      var timeOutSeconds = timeout/1000;
      localStorage.setItem("SessionCounter", timeOutSeconds);
      var warningDialogShow = false;
      var logOutCalled = false;
      var intervalCheckSessionTimeout;
      localStorage.setItem("isLogout", false);
      
      
      $(function() { 
        intervalCheckSessionTimeout = setInterval(TimerDecrement, 1000); // Call Every Second
        document.onkeypress = resetCounterAndTimeout;
        document.onclick = resetCounterAndTimeout;
        document.onmousedown = resetCounterAndTimeout;
        document.ontouchstart = resetCounterAndTimeout;
        document.onscroll = resetCounterAndTimeout;
        
        function resetCounterAndTimeout(){
          localStorage.removeItem("SessionCounterUpdatedOn");
          timeOutSeconds = timeout/1000;
          localStorage.setItem("SessionCounter", timeOutSeconds);
        }
      });

      function TimerDecrement() {
        var lastUpdated = localStorage.getItem("SessionCounterUpdatedOn"), now = new Date(), shouldCheck = false;
        
        if (lastUpdated == null) {
            localStorage.setItem("SessionCounterUpdatedOn", now);
        } else if (now.getTime() - new Date(lastUpdated).getTime() >= 1000) {
            // set this immediatedly so another tab checking while we are processing doesn't also process.
            localStorage.setItem("SessionCounterUpdatedOn", now);
            shouldCheck = true;
        }
        
        if (shouldCheck) {
            if (timeOutSeconds > 0) {
            
              if (parseInt(localStorage.getItem("SessionCounter"), 10) > 0) {
                timeOutSeconds = parseInt(localStorage.getItem("SessionCounter"), 10);
              }
              timeOutSeconds--;
              localStorage.setItem("SessionCounter", timeOutSeconds);
              
            } else {
                
                if (localStorage.getItem("isLogout") === "false") {
                  localStorage.setItem("isLogout",true);
                  logoutAndShowDialog();
                } else {
                  PF('timeout-warning-dialog').hide();
                  PF('viewExpiredExceptionDialog').show();
                  clearInterval(intervalCheckSessionTimeout);
                } 
            }
        } else {
            timeOutSeconds = parseInt(localStorage.getItem("SessionCounter"), 10);
        }
        
        if (timeOutSeconds &lt; 60){
          if(warningDialogShow == false){
         	warningDialogShow = true;
            PF('timeout-warning-dialog').show();
          }
        } else {
          warningDialogShow = false;
          PF('timeout-warning-dialog').hide();
        }

      }
    </script>

</cc:implementation>
</html>