<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:cc="http://xmlns.jcp.org/jsf/composite" xmlns:ic="http://ivyteam.ch/jsf/component"
  xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions">

<cc:interface componentType="IvyComponent">
  <cc:attribute name="targetComponent" required="true" shortDescription="Id of target component." />
  <cc:attribute name="targetCssSelector" required="true" 
    shortDescription="Find target component by css selector in order to highlight it" />
  <cc:attribute name="targetPosition" default="relative" 
    shortDescription="Position css style of targer component highlight it. Default is relative" />
  <cc:attribute name="arrowPosition" default="top center"
    shortDescription="Arrow position points to target component. First value is the overlay panel's side, available values: top, right, bottom, left. Second value is arrow position at this side, available values: top, right, bottom, left, center. Default: top center" />
  <cc:attribute name="icon" />
  <cc:attribute name="title" />
  <cc:attribute name="content" />
  <cc:attribute name="contentWidth" />
  <cc:attribute name="my" default="center top+30" 
    shortDescription="Position of the panel relative to the target, including two values, e.g. left top. Available values: top, right, bottom, left, center. Default: center top+30" />
  <cc:attribute name="at" default="left bottom" 
    shortDescription="Position of the target relative to the panel, including two values, e.g. left top. Available values: top, right, bottom, left Default: left bottom" />
  <cc:attribute name="onShow" />
  <cc:attribute name="onHide" />
  <cc:attribute name="onNext" shortDescription="javascript function to execute after click on Next button" />
  <cc:attribute name="updatedComponentAfterGuide" shortDescription="Update the given components in order to display real data after guide." />
  <cc:attribute name="isFinalStep" default="false" />
</cc:interface>

<cc:implementation>
  <p:dialog id="#{cc.attrs.targetComponent}-guide" widgetVar="#{cc.attrs.targetComponent}-guide" modal="true" appendTo="@(body)"
    styleClass="guide-panel" onHide="window['#{cc.attrs.targetComponent}' + '-guide'].hide();#{cc.attrs.onHide}" 
    draggable="false" closable="false" resizable="false" showHeader="false"
    onShow="window['#{cc.attrs.targetComponent}' + '-guide'].show(); #{cc.attrs.onShow}">
    <span class="guide-panel__arrow" />
    <div class="guide-panel__container" style="width: #{cc.attrs.contentWidth}">
      <span class="fa #{cc.attrs.icon} fa-4x" />
      <h2>#{cc.attrs.title}</h2>
      <p class="guide-panel__content">#{cc.attrs.content}</p>
      <div class="guide-panel__buttons">
        <p:commandLink id="cancel" value="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/common/cancel')}"
          process="@none" update="#{cc.attrs.updatedComponentAfterGuide}"
          oncomplete="PF('#{cc.attrs.targetComponent}-guide').hide()" styleClass="guide-panel__cancel"
          rendered="#{not cc.attrs.isFinalStep}" />
          
        <p:commandButton id="next" type="button" value="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/common/next')}" 
          onclick="PF('#{cc.attrs.targetComponent}-guide').hide(); #{cc.attrs.onNext}" rendered="#{not cc.attrs.isFinalStep}" />
        <p:commandButton id="finish" value="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/common/finish')}"
          process="@none" update="#{cc.attrs.updatedComponentAfterGuide}"
          oncomplete="PF('#{cc.attrs.targetComponent}-guide').hide(); #{cc.attrs.onNext}"
          rendered="#{cc.attrs.isFinalStep}" />
      </div>
      <div class="guide-panel__dont-show-again">
        <p:selectBooleanCheckbox value="" itemLabel="#{ivy.cms.co('/ch.ivy.addon.portalkit.ui.jsf/components/guide/dontShowAgain')}" />
      </div>
    </div>
  </p:dialog>
  <script>
    window['#{cc.attrs.targetComponent}' + '-guide'] = new GuidePanel('#{cc.attrs.targetCssSelector}', '#{cc.attrs.my}', '#{cc.attrs.at}', '#{cc.attrs.targetPosition}', '#{cc.attrs.arrowPosition}');
  </script>
</cc:implementation>
</html>