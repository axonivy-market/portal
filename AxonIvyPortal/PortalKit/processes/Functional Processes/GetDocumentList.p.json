{
  "format" : "9.4.11",
  "id" : "181954995A0E47B0",
  "data" : "ch.ivy.add.portalkit.GetDocumentListData",
  "kind" : "CALLABLE_SUB",
  "elements" : [ {
      "id" : "f0",
      "type" : "CallSubStart",
      "name" : "call(ICase)",
      "config" : {
        "callSignature" : "call",
        ".name" : "call(ICase)",
        "input" : {
          "params" : [
            { "name" : "businessCase", "type" : "ch.ivyteam.ivy.workflow.ICase" }
          ],
          "map" : {
            "out.businessCase" : "param.businessCase"
          }
        },
        "result" : {
          "params" : [
            { "name" : "documents", "type" : "java.util.List<com.axonivy.portal.component.ivydata.bo.IvyDocument>" },
            { "name" : "message", "type" : "String" }
          ],
          "map" : {
            "result.documents" : "in.documents",
            "result.message" : "in.message"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 64 },
        "labelOffset" : { "x" : -32, "y" : 24 }
      },
      "connect" : { "id" : "f4", "to" : "f3" }
    }, {
      "id" : "f1",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 352, "y" : 64 }
      }
    }, {
      "id" : "f3",
      "type" : "Script",
      "name" : "get document items",
      "config" : {
        "security" : "system",
        ".name" : "get document items",
        "output" : {
          "code" : [
            "import com.axonivy.portal.component.enums.BasicDocumentType;",
            "import com.axonivy.portal.component.document.IvyDocumentTransformer;",
            "import com.axonivy.portal.component.ivydata.bo.IvyDocument;",
            "import ch.ivy.addon.portalkit.document.DocumentCustomField;",
            "import org.apache.commons.lang3.StringUtils;",
            "import ch.ivyteam.ivy.workflow.document.IDocument;",
            "import ch.ivyteam.ivy.workflow.ICase;",
            "import ch.ivy.addon.portalkit.constant.PortalConstants;",
            "import ch.ivy.addon.portalkit.service.CaseDocumentService;",
            "",
            "if(in.#businessCase is initialized) {",
            "  List<IDocument> iDocuments = CaseDocumentService.newInstance(in.businessCase).getAll();",
            "  IvyDocumentTransformer transformer = new IvyDocumentTransformer();",
            "  in.documents = transformer.transform(iDocuments);",
            "  for (IvyDocument ivyDocument : in.documents) {",
            "    String stringField = DocumentCustomField.TYPE_PREFIX + ivyDocument.id;",
            "    String documentTypeString = in.businessCase.customFields().stringField(stringField).getOrNull();",
            "    if (StringUtils.isNotBlank(documentTypeString)) {",
            "      ivyDocument.setType(BasicDocumentType.valueOf(documentTypeString.toUpperCase()));",
            "    }",
            "  }",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 224, "y" : 64 },
        "size" : { "width" : 128, "height" : 44 }
      },
      "connect" : { "id" : "f2", "to" : "f1" }
    }, {
      "id" : "f5",
      "type" : "ProcessAnnotation",
      "name" : [
        "After get document list from DMS, convert them into List<ch.ivy.addon.portal.component.ivydata.bo.IvyDocument>",
        "Some mandatory fields when mapping:",
        "- id",
        "- name",
        "- contentType"
      ],
      "config" : {
        ".name" : [
          "After get document list from DMS, convert them into List<ch.ivy.addon.portal.component.ivydata.bo.IvyDocument>",
          "Some mandatory fields when mapping:",
          "- id",
          "- name",
          "- contentType"
        ]
      },
      "visual" : {
        "at" : { "x" : 344, "y" : 240 },
        "size" : { "width" : 624, "height" : 108 }
      },
      "connect" : { "id" : "f6", "to" : "f0" }
    } ]
}