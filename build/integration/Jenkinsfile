pipeline {
  agent {label 'portal-slave'}
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }
  
  tools { 
      maven '3.6' 
      jdk '11' 
  }

  parameters {
      string(name: 'testPatternToRun', defaultValue: 'portal.guitest.userexample.test.*Test,portal.guitest.test.*Test', description: 'Test pattern to run.')
      string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/8.0/axonivy-engine-windows.zip', description: 'Where to download engine?')
      booleanParam(name: 'skipReplacePortal', defaultValue: false, description: 'Should skip replace Portal artifacts in the engine? TRUE: keep built-in Portal of the engine, FALSE: replace built-in Portal of the engine by the latest successful release.')
  }

  environment {
    releaseDir = 'archive'
    engineDir = "$env.WORKSPACE/engine"
  }
  stages {
    stage('build') {
      steps {
        script {
          downloadPortalRelease()

          echo '====================Check out tag of Portal latest successful release===================='
          powershell '''
            $artifactPattern = $env:releaseDir + '/AxonIvyPortal/PortalKit/target/*.iar' 
            $artifactName = dir $artifactPattern | select -expand BaseName
            $versionLastestReleasedPortal = $artifactName.substring(10)
            git fetch --tags
            git checkout tags/$versionLastestReleasedPortal
            git reset --hard HEAD
            git clean -fd
          '''

          echo '====================Copy patch to workspace if any. Note: this is in a tag and we cannot change code in git repo===================='
          powershell '''
            if (Test-Path ../patch/8.0) {
              copy -path ../patch/8.0 -recurse -force -destination .
            }
          '''

          downloadPortalRelease()

          echo '====================Extract engine===================='
          bat '''
            mvn clean compile -f AxonIvyPortal/PortalTest/pom.xml -Divy.engine.directory=%engineDir% %engineDownloadURL%
          '''

          if (!params.skipReplacePortal) {
            echo '====================Replace Portal in engine===================='
            powershell '''
              $DEPLOYMENT= $env:engineDir + "/system/demo-applications/demo-portal"
              rmdir $DEPLOYMENT/* -recurse
              Copy-Item $env:releaseDir/AxonIvyPortal/PortalApp/target/*zip -Destination $DEPLOYMENT
              Copy-Item $env:releaseDir/Showcase/PortalExamples/target/*iar -Destination $DEPLOYMENT
            '''
          }

          echo '====================Build PortalKitTestHelper and InternalSupport===================='
          def extraModules = ['AxonIvyPortal/PortalKitTestHelper', 'Showcase/InternalSupport']
          for (module in extraModules) {
            bat "mvn clean install -f ${module}/pom.xml -Divy.engine.directory=%engineDir% -Divy.compiler.engine.start.timeout=120"
          }

          node('master') {
            echo '====================Close all remote desktop connections and setup new remote destop to Portal slave===================='
            bat '''
              taskkill -im mstsc.exe -F
              exit 0
            '''
            configFileProvider(
                [configFile(fileId: 'properties-config', variable: 'PROPERTIES_CONFIG')]) {
                props = readProperties  file: "${env.PROPERTIES_CONFIG}"
                //e.g. remoteDesktopCmd=D:/tools/remote-desktop-plus/rdp.exe /v:10.123.1.193 /domain:wawa.vn /u:wawa /p:W4w4@CH$ /w:2560 /h:1440 /noclose
                bat "${props.remoteDesktopCmd}"
            }
          }

          echo '====================Close opening browsers===================='
          bat '''
            taskkill -im IEDriverServer.exe -F
            taskkill -im iexplore.exe -F
            taskkill -im GeckoFireFoxDriver.exe -F
            taskkill -im firefox.exe -F
            exit 0
          '''

          echo '====================Test Portal===================='
          bat """
            mvn clean test -f AxonIvyPortal/PortalTest/customized_pom.xml -Dtest=%testPatternToRun% -DbrowserType=${props.browserType} -DtrimStackTrace=false -Divy.engine.directory=%engineDir% -Divy.deploy.timeout.seconds=60 -Divy.compiler.engine.start.timeout=120
          """

          node('master') {
            echo '====================Close all remote desktop connections===================='
            bat '''
              taskkill -im mstsc.exe -F
              exit 0
            '''
          }
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: "AxonIvyPortal/PortalTest/target/*/*/*.jpg", allowEmptyArchive: true, fingerprint: true
      junit allowEmptyResults: true, testResults: '**/surefire-reports/TEST-*.xml'
    }
  }
}

def downloadPortalRelease() {
  echo '====================Download Portal latest successful release===================='
  def branchName = env.BRANCH_NAME.replaceAll("/", "%%2F")
  bat "curl --user wawa:W4w4@CH\$ --output archive.zip ${env.JENKINS_URL}job/PortalRelease/job/${branchName}/lastSuccessfulBuild/artifact/*zip*/archive.zip"
  unzip zipFile: 'archive.zip', quiet: true
}
