pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
    }

    triggers {
        pollSCM 'H/15 * * * *'
    }

    stages {
        stage("build") {
            steps {
                script {
                    builtModules = ['AxonIvyPortal/portal-components',]
                    docker.withRegistry('', 'docker.io') {
                        docker.build("portal", "-f build/Dockerfile .").inside() {
                            def modules = ['AxonIvyPortal/portal-components', 'AxonIvyPortal/portal', 'AxonIvyPortal/AxonIvyExpress', 'AxonIvyPortal/PortalKitTestHelper', 'Showcase/portal-user-examples', 'Showcase/portal-developer-examples', 'Showcase/InternalSupport', 'Showcase/portal-components-examples']
                            for (module in modules) {
                                builtModules.add(module)
                                maven cmd: "clean install -f ${module}/pom.xml"
                            }
                        }
                    }
                    archiveArtifacts artifacts: "*/*/target/*.iar", allowEmptyArchive: true
                }
            }
        }

        stage("deploy") {
            steps {
                script {
                    docker.withRegistry('', 'docker.io') {
                        docker.build("portal", "-f build/Dockerfile .").inside() {
                            for (module in builtModules) {
                                maven cmd: "com.axonivy.ivy.ci:project-build-plugin:10.0.1:deploy-to-engine -f ${module}/pom.xml -Divy.deploy.server.id=NightlyPortal -Divy.deploy.engine.app=Portal -Divy.deploy.method=HTTP -Divy.deploy.engine.url=http://10.123.1.216:8011 -Divy.test.engine=MODIFY_EXISTING"
                            }
                        }
                    }
                }
            }
        }
    }
}