builtModules = []

pipeline {
  agent {label 'master'}
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }
  
  triggers {
    pollSCM 'H/15 * * * *'
  }

  tools { 
      maven '3.6' 
      jdk '11' 
  }

  parameters {
      string(name: 'modulesMustBeBuilt', defaultValue: '', description: 'Define modules must be built. By default, only modules which have code changes since the last successful build are built. Available modules: PortalStyle,PortalKit,PortalTemplate,AxonIvyExpress,PortalKitTestHelper,portal-user-examples,portal-developer-examples,InternalSupport. E.g. PortalStyle code is changed, then set this property value PortalKit,PortalTemplate => PortalStyle,PortalKit,PortalTemplate will be built.')
  }

  environment {
    engineDir = 'D:/tools/ivy-server/trunk'
    portalApplicationName = 'Portal'
  }

  stages {
    stage('build') {
      steps {
        script {
          def modules = ['AxonIvyPortal/PortalStyle', 'AxonIvyPortal/PortalKit', 'AxonIvyPortal/PortalTemplate', 'AxonIvyPortal/AxonIvyExpress', 'AxonIvyPortal/PortalKitTestHelper', 'Showcase/portal-user-examples', 'Showcase/portal-developer-examples', 'Showcase/InternalSupport']
          def changeLog = ''
          if (env.GIT_PREVIOUS_SUCCESSFUL_COMMIT) {
            changeLog = bat(script: "git diff --name-only ${env.GIT_COMMIT} ${env.GIT_PREVIOUS_SUCCESSFUL_COMMIT}", returnStdout: true)
          }
          for (module in modules) {
            if (changeLog.contains(module) || params.modulesMustBeBuilt.contains(module.split('/')[1])) {
              builtModules.add(module)
              bat "mvn clean install -f ${module}/pom.xml"
            }
          }
          archiveArtifacts artifacts: "*/*/target/*.iar", allowEmptyArchive: true
        }
      }
    }

    stage('deploy') {
      steps {
        script {
          for (module in builtModules) {
              bat "mvn com.axonivy.ivy.ci:project-build-plugin:8.0.0:deploy-to-engine -f ${module}/pom.xml -Divy.deploy.engine.app=%portalApplicationName% -Divy.deploy.engine.dir=%engineDir%"
          }
        }
      }
    }
  }
}
