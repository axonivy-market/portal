pipeline {
  agent {label 'aws-fra-integration'}
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }
  
  tools { 
      maven 'maven' 
      jdk 'JDK 11.0.5' 
  }

  parameters {
      string(name: 'releaseVersion', defaultValue: '8.0.8', description: 'The release version.')
  }

  environment {
    engineDir = 'C:/tools/ivy-server/geat'
  }

  stages {
    stage('build') {
      steps {
        script {
          echo "====================Update pom version to ${params.releaseVersion}===================="
          powershell '''
            #find all pom file of portal project and change their versions and their portal dependencies to releaseVersion
            $utf8WithoutBom = New-Object System.Text.UTF8Encoding($false)
            $files = get-childitem AxonIvyPortal/*/pom.xml,Showcase/*/pom.xml,AxonIvyPortal/PortalTest/customized_pom.xml
            foreach($file in $files) {
              $xml = new-object xml
              $xml.load($file)
              $xml.project.version = $env:releaseVersion
              $dependencies = $xml.project.dependencies.ChildNodes
              foreach($dependency in $dependencies) {
                if(($dependency.groupId -eq 'ch.ivyteam.ivy.project.portal') -or ($dependency.groupId -eq 'com.axonivy.portal')) {
                  $dependency.version = $env:releaseVersion
                }
              }
              $sw = New-Object System.IO.StreamWriter($file, $false, $utf8WithoutBom)
              $xml.Save($sw)
            }
          '''

          echo "====================Build all modules===================="
          def modules = ['AxonIvyPortal/PortalStyle', 'AxonIvyPortal/PortalKit', 'AxonIvyPortal/PortalTemplate', 'AxonIvyPortal/AxonIvyExpress']
          for (module in modules) {
            bat "mvn clean deploy -Divy.compiler.engine.start.timeout=120 -f ${module}/pom.xml"
          }

          echo "====================Create release tag ${params.releaseVersion}===================="
          bat """
            rem remove created tag
			git config --global user.email "jenkins@axonivy.io"
			git config --global user.name "Jenkins"
            git push --delete origin ${params.releaseVersion}
            git tag -d ${params.releaseVersion}

            rem Create tag for the release
            git commit -a -m "update projects version"
            git tag -a ${params.releaseVersion} -m "Tagged Portal release ${params.releaseVersion} by build job ${env.BUILD_URL}
            git push origin ${params.releaseVersion}
          """
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: "**/target/*.iar,*/*/pom.xml"
    }
  }
}
