pipeline {
  agent {label 'master'}
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '200', artifactNumToKeepStr: '5'))
  }
  
  // triggers {
  //   cron('0 19 * * *')
  // }

  tools { 
      maven '3.6' 
      jdk '11' 
  }

  environment {
    engineDir = 'C:/tools/ivy-server/trunk'
    portalApplicationName = 'Portal'
  }

  stages {
    stage('deploy') {
      agent {label 'slave_performance_server'}
      steps {
        script {
          def engines = ['Axon.ivy Engine - LTS', 'Axon.ivyEngine8.0', 'Axon.ivyEngineTrunk']
          for (engine in engines) {
            bat """
              net stop \"${engine}\"
              exit 0
            """
          }
          bat """
            net start "Axon.ivyEngineTrunk"
            exit 0
          """

          def modules = ['AxonIvyPortal/PortalStyle', 'AxonIvyPortal/PortalKit', 'AxonIvyPortal/PortalTemplate', 'AxonIvyPortal/AxonIvyExpress']
          for (module in modules) {
            bat "mvn clean install -f ${module}/pom.xml"
            bat "mvn com.axonivy.ivy.ci:project-build-plugin:8.0.0:deploy-to-engine -f ${module}/pom.xml -Divy.deploy.engine.app=%portalApplicationName% -Divy.deploy.engine.dir=%engineDir%"
          }
        }
      }
    }
    stage('test') {
      tools { 
        jdk '8' 
      }
      steps {
        script {
          today = new Date().format('dd-MM-yyyy_HH-mm')
          fileOperations([folderCreateOperation(folderPath: "D:/PerformanceResult/${today}/trunk")])
          echo "====================Test one admin user===================="
          powershell '''
            get-content AxonIvyPortal/PortalTest/jmeter/test.properties | select-string -pattern 'portal.thread.numberOfUser' -notmatch | select-string -pattern 'file.csv' -notmatch | Out-File AxonIvyPortal/PortalTest/jmeter/out.properties -encoding ASCII
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "file.csv=data/single_admin_user_server.csv"
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "portal.thread.numberOfUser=1"
            move AxonIvyPortal/PortalTest/jmeter/out.properties AxonIvyPortal/PortalTest/jmeter/test.properties -Force
          '''
          bat '''
            jmeter.bat -n -t AxonIvyPortal/PortalTest/jmeter/portal_walkthrough_testplan.jmx -l temp.jtl
          '''
          bat """
            jmeter.bat -n -t AxonIvyPortal/PortalTest/jmeter/portal_walkthrough_testplan.jmx -l D:/PerformanceResult/${today}/trunk/result_1_admin_user.jtl
          """
          echo "====================Test for one normal user===================="
          powershell '''
            get-content AxonIvyPortal/PortalTest/jmeter/test.properties | select-string -pattern 'portal.thread.numberOfUser' -notmatch | select-string -pattern 'file.csv' -notmatch | Out-File AxonIvyPortal/PortalTest/jmeter/out.properties -encoding ASCII
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "file.csv=data/single_normal_user_server.csv"
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "portal.thread.numberOfUser=1"
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "portal.thread.rampup=1"
            move AxonIvyPortal/PortalTest/jmeter/out.properties AxonIvyPortal/PortalTest/jmeter/test.properties -Force
          '''
          bat """
            jmeter.bat -n -t AxonIvyPortal/PortalTest/jmeter/portal_walkthrough_testplan.jmx -l D:/PerformanceResult/${today}/trunk/result_1_normal_user.jtl
          """
          echo "====================Test ten users===================="
          powershell '''
            get-content AxonIvyPortal/PortalTest/jmeter/test.properties | select-string -pattern 'portal.thread.numberOfUser' -notmatch | select-string -pattern 'file.csv' -notmatch | Out-File AxonIvyPortal/PortalTest/jmeter/out.properties -encoding ASCII
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "file.csv=data/users_server.csv"
            Add-Content AxonIvyPortal/PortalTest/jmeter/out.properties "portal.thread.numberOfUser=10"
            move AxonIvyPortal/PortalTest/jmeter/out.properties AxonIvyPortal/PortalTest/jmeter/test.properties -Force
          '''
          bat """
            jmeter.bat -n -t AxonIvyPortal/PortalTest/jmeter/portal_walkthrough_testplan.jmx -l D:/PerformanceResult/${today}/trunk/result_10_users.jtl
          """
        }
      }
    }
  }

  post {
    always {
      node('slave_performance_server') {
        bat """
          net stop "Axon.ivyEngineTrunk"
          exit 0
        """
      }
      archiveArtifacts artifacts: "D:/PerformanceResult/${today}/trunk/*.jtl", allowEmptyArchive: true, fingerprint: true
      perfReport sourceDataFiles: "D:/PerformanceResult/${today}/trunk/*.jtl", compareBuildPrevious :true, ignoreFailedBuilds: true, ignoreUnstableBuilds: true
    }
  }
}
