pipeline {
  agent {label 'portal-slave'}
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '30'))
  }
  
  triggers {
    cron('0 20 * * *')
  }

  tools { 
      maven '3.1' 
      jdk '8' 
  }

  parameters {
      string(name: 'testPatternToRun', defaultValue: 'portal.guitest.test.*Test', description: 'Test pattern to run')
      string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly-7/axonivy-engine-windows.zip', description: '''Where to download engine? e.g.
        -Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly-7/axonivy-engine-windows.zip for nightly 7.0
        -Divy.engine.list.url=https://jenkins.ivyteam.io/job/ivy-core-70_product/job/7.0/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/ -Divy.engine.os.arch=Windows_x64 for last successful build 7.0
        -Divy.engine.download.url=file:///C:/wawa/engine/AxonIvyEngineX.X.X.X_Windows_x64.zip for downloaded engine
      ''')
  }

  environment {
    engineDir = "$env.WORKSPACE/AxonIvyPortal/PortalTest/engine"
  }

  stages {
    stage('build') {
      steps {
        script {
          def utils = load 'build/common/utils.groovy'
          utils.stopAllEngines()
          utils.extractEngine(env.engineDir, params.engineDownloadURL)

          echo "====================Deploy Portal modules===================="
          def modules = ['AxonIvyPortal/PortalConnector', 'AxonIvyPortal/PortalStyle', 'AxonIvyPortal/PortalKit', 'AxonIvyPortal/PortalTemplate', 'AxonIvyPortal/AxonIvyExpress', 'AxonIvyPortal/SelfServiceBPM', 'AxonIvyPortal/PortalKitTestHelper', 'Showcase/PortalExamples', 'Showcase/InternalSupport']
          for (module in modules) {
            bat "mvn clean install -f ${module}/pom.xml -Divy.engine.directory=%engineDir%"
            def moduleName = module.split('/')[1]
            def deployedApplication = module.contains('PortalConnector') ? 'System' : 'Portal'
            def deployedModuleDir = "AxonIvyPortal/PortalTest/engine/system/applications/${deployedApplication}/${moduleName}"
            powershell """
                if (!(Test-Path ${deployedModuleDir})) {
                  mkdir ${deployedModuleDir}
                }
              cd "${deployedModuleDir}"
              rmdir * -recurse
              mkdir 1
              cd 1
              jar xf ${env.WORKSPACE}/${module}/target/*.iar
            """
          }

          node('master') {
            utils.remoteDesktop()
          }

          utils.killUnnecessaryProcessesToRunTest()

          echo '====================Execute maven for testing===================='
          bat "mvn clean test -f AxonIvyPortal/PortalTest/customized_pom.xml %engineDownloadURL% -Dtest=${params.testPatternToRun} -DbrowserType=${props.browserType} -DtrimStackTrace=false -Divy.engine.directory=engine -Divy.deploy.timeout.seconds=60 -Divy.compiler.engine.start.timeout=120 -DdemoUserName=demo -DdemoUserPassword=demo -DadminUserName=admin -DadminUserPassword=admin -DSelfServicePMName=SelfServiceBpm"
          node('master') {
            utils.closeAllRemoteDesktopConnections()
          }
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: "AxonIvyPortal/PortalTest/target/*/*/*.jpg, AxonIvyPortal/PortalTest/target/testEngineOut.log", allowEmptyArchive: true
      junit allowEmptyResults: true, testResults: '**/surefire-reports/TEST-*.xml'
    }
  }
}
