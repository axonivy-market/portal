pipeline {
  agent {label 'common'}

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '60'))
  }

  triggers {
    pollSCM '0 7 * * *'
    cron('0 11 * * *')
  }

  tools {
    maven '3.8'
    jdk '17'
  }

  parameters {
    string(name: 'testPatternToRun', defaultValue: 'com.axonivy.portal.selenium.test.**.*Test', description: 'Test pattern to run')
    string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly/axonivy-engine-windows.zip', description: '''Where to download engine? e.g.
      -Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly/axonivy-engine-windows.zip for nightly master
      -Divy.engine.download.url=https://developer.axonivy.com/permalink/dev/axonivy-engine-windows.zip for dev master
      -Divy.engine.download.url=file:///C:/wawa/engine/AxonIvyEngineX.X.X.X_Windows_x64.zip for downloaded engine
      -Divy.engine.list.url=https://jenkins.ivyteam.io/job/core_product/job/release%252F9.4/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/ -Divy.engine.os.arch=Windows_x64 for last successful build 9.4
    ''')
  }

  environment {
    engineDir = "$env.WORKSPACE/AxonIvyPortal/portal-selenium-test/engine"
  }

  stages {
    stage('build') {
      steps {
        script {
          currentBuild.description = "On ${env.NODE_NAME}"
          def utils = load 'build/common/utils.groovy'
          utils.init()
          utils.stopAllEngines()
          utils.extractEngine(env.engineDir, params.engineDownloadURL)

          utils.downloadExpress()
          def expressFile = findFiles(glob: 'archive/**/axonivy-express*.iar')[0].path

          echo '====================Build Portal modules===================='
          def modules = ['AxonIvyPortal/portal-components', 'AxonIvyPortal/portal', 'AxonIvyPortal/PortalKitTestHelper', 'Showcase/portal-user-examples', 'Showcase/portal-developer-examples', 'Showcase/InternalSupport', 'Showcase/portal-components-examples', 'AxonIvyPortal/PortalApp', 'Showcase/portal-demo-app']
          for (module in modules) {
            bat "mvn clean install -f ${module}/pom.xml -Divy.engine.directory=%engineDir%"
          }

          echo '====================Deploy Portal modules===================='
          powershell """
            \$DEPLOYMENT= \$env:engineDir + "/system/demo-applications/demo-portal"
            rmdir \$DEPLOYMENT/* -recurse
            Copy-Item Showcase/portal-demo-app/target/*zip -Destination \$DEPLOYMENT
            Copy-Item Showcase/portal-developer-examples/target/*iar -Destination \$DEPLOYMENT
            Copy-Item Showcase/portal-components-examples/target/*iar -Destination \$DEPLOYMENT
            Copy-Item ${expressFile} -Destination \$DEPLOYMENT
          """
          utils.killUnnecessaryProcessesToRunTest()

          echo '====================Execute maven for testing===================='
          bat "mvn clean test -f AxonIvyPortal/portal-selenium-test/customized_pom.xml %engineDownloadURL% -Dtest=${params.testPatternToRun} -DbrowserType=FIREFOX -DtrimStackTrace=false -Divy.engine.directory=%engineDir% -Divy.deploy.timeout.seconds=60 -Divy.compiler.engine.start.timeout=120"
          utils.cleanDisk()
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: 'AxonIvyPortal/portal-selenium-test/target/selenide/reports/**/*.*, AxonIvyPortal/portal-selenium-test/target/testEngineOut.log', allowEmptyArchive: true
      junit allowEmptyResults: true, testResults: '**/surefire-reports/TEST-*.xml'
    }
  }
}
