pipeline {
  agent {label 'master'}
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }
  
  tools { 
      maven '3.6' 
      jdk '11' 
  }

  parameters {
      choice(name: 'engineKey', choices: ['singleAppEngine', 'multiAppsEngine'], description: 'Which engine to be upgraded?')
      string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/sprint/axonivy-engine-windows.zip', description: 'Where to download engine?')

  }

  environment {
    portalApplicationName = 'Portal'

  }

  stages {
    stage('build') {
      agent {label 'master'}
      steps {
        script {
          today = new Date().format('dd-MM-yyyy_HH-mm')

          config = [singleAppEngine: [engineParentDir: 'D:\\tools\\ivy-server\\', engineName: 'trunk', databaseBackupDir: 'D:\\backup\\database', databaseName: 'ivy-trunk', serviceName: 'Axon.ivy-trunk']
          ,multiAppsEngine: [engineParentDir: 'D:\\tools\\ivy-server\\', engineName: 'trunk-1', databaseBackupDir: 'D:\\backup\\database', databaseName: 'ivy-trunk-1', serviceName: 'Axon.ivy-trunk-1']]

          engineParentDir = config[params.engineKey]['engineParentDir']
          engineName = config[params.engineKey]['engineName']
          databaseBackupDir = config[params.engineKey]['databaseBackupDir']
          databaseName = config[params.engineKey]['databaseName']
          serviceName = config[params.engineKey]['serviceName']
          engineDir = engineParentDir  + engineName
          renamedEngineDir = engineDir + '-bk'
          engineBackupDir = engineParentDir + 'upgrade-backup'
          dbBackupFileName = engineName + '-' + today

          bat """
            rem backup data to restore in case build fails
            xcopy /s/y/h/e/k/i ${engineDir} ${engineBackupDir}\\${engineName}-${today}

            rem Backup database
            pg_dump -U postgres -f ${databaseBackupDir}\\${databaseName}-${today}.backup -F Custom -b ${databaseName}
          """
          bat """
            rem stop engine
            sc query "${serviceName}" | find /i "RUNNING"
            if not "%ERRORLEVEL%"=="1" ( net stop ${serviceName} )
            exit 0
          """
          bat """
            rem backup current engine folder
            if exist ${renamedEngineDir} rmdir /s /q ${renamedEngineDir}
            :repeat
            ren "${engineDir}" "${engineName}-bk" || goto :repeat
          """
          bat """
            mvn com.axonivy.ivy.ci:project-build-plugin:8.0.0:installEngine %engineDownloadURL% -Divy.engine.directory=${engineDir} -Divy.engine.os.arch=Windows_x64 -Divy.engine.version=(7.0.0,]
          """
          bat """
            rem copy license, configuration files
            copy /D/Y ${renamedEngineDir}\\configuration\\*.lic ${engineDir}\\configuration
            copy /D/Y ${renamedEngineDir}\\configuration\\*.yaml ${engineDir}\\configuration
          """
          powershell """
            #copy applications, misc/iis (for SSO)
            copy -path ${renamedEngineDir}\\applications -recurse -force -destination ${engineDir}
            copy -path ${renamedEngineDir}\\misc\\iis -recurse -force -destination ${engineDir}\\misc
          """
          bat """
            rem start engine
            net start ${serviceName}

            @echo off
            echo %time%
            for /l %%i IN (1,1,150) do (
              sc query ${serviceName} | findstr STATE | findstr RUNNING
              if errorlevel 1 (
                ping 1.1.1.1 -n 1 -w 1000 > nul
              ) else (
                echo ${serviceName} started
              goto :endwaiting
              )
            )
            :endwaiting
            echo %time%

            echo on
          """
        }
      }
    }

  }
}
