pipeline {
  agent {
    label 'linux'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }

  parameters {
      choice(name: 'engine', choices: ['master'], description: 'Engine to choose e.g. master, 10.0, 8.0')
  }

  stages {
    stage('backupDatabase') {
      steps {
        script {
          today = new Date().format('dd-MM-yyyy_HH-mm')
          config = [master: [engineParentDir: "/var/tools/ivy/", engine: 'master', systemDatabase: 'AxonIvySystemDatabase']]
          engineDir = config[params.engine]['engineParentDir'] + config[params.engine]['engine']
          databaseBackupDir = "/var/database-backups/"
          databaseName = config[params.engine]['systemDatabase']
          dbBackupFile = databaseBackupDir + databaseName + '-' + config[params.engine]['engine'] + '-' + today + ".dump"

          sh """
            echo ====================Backup database====================
            cd ${engineDir}
            [ -d ${databaseBackupDir} ] ||  mkdir -p ${databaseBackupDir}
            docker exec -u postgres postgres-master pg_dump -Fc ${databaseName} > ${dbBackupFile}
          """
        }
      }
    }
    
    stage('upgradeEngine') {
      steps {
        script {
          sh """
            echo ====================Upgrade engine====================
            cd ${engineDir}
            docker compose stop
            docker compose pull
            docker compose up -d
          """
        }
      }
    }
  }
}
