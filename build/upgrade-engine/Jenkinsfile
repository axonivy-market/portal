pipeline {
  agent none
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }
  
  tools { 
      maven '3.1' 
      jdk '8' 
  }

  parameters {
      choice(name: 'engine', choices: ['singleAppEngine', 'performanceTestEngine'], description: 'Which engine to be upgraded?')
      string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/7.0/axonivy-engine-windows.zip', description: '''Where to download engine? e.g.
        -Divy.engine.download.url=https://developer.axonivy.com/permalink/7.0/axonivy-engine-windows.zip for latest release 7.0
        -Divy.engine.list.url=https://jenkins.ivyteam.io/view/7.0/job/ivy-core-70_product/job/7.0/lastSuccessfulBuild/artifact/workspace/ch.ivyteam.ivy.server.product/target/products/ -Divy.engine.os.arch=Windows_x64 for last successful build 7.0
        -Divy.engine.download.url=file:///C:/wawa/engine/AxonIvyEngineX.X.X.X_Windows_x64.zip for downloaded engine
      ''')
  }

  environment {
    portalApplicationName = 'Portal'

  }

  stages {
    stage('backupDatabase') {
      agent {label 'master'}
      steps {
        script {
          today = new Date().format('dd-MM-yyyy_HH-mm')

          config = [singleAppEngine: [engineParentDir: 'D:\\tools\\ivy-server\\', engineName: '7.0', databaseBackupDir: 'D:\\backup\\database', databaseName: '7.0_AxonIvySystemDatabase', serviceName: 'Axon.ivy-7.0']
          ,performanceTestEngine: [engineParentDir: 'C:\\tools\\ivy-server\\', engineName: 'LTS', databaseBackupDir: 'D:\\backup\\database', databaseName: 'ivy-performance-7.0', serviceName: 'Axon.ivyEngine - LTS']]

          engineParentDir = config[params.engine]['engineParentDir']
          engineName = config[params.engine]['engineName']
          databaseBackupDir = config[params.engine]['databaseBackupDir']
          databaseName = config[params.engine]['databaseName']
          serviceName = config[params.engine]['serviceName']
          engineDir = engineParentDir  + engineName
          renamedEngineDir = engineDir + '-bk'
          engineBackupDir = engineParentDir + 'upgrade-backup'
          dbBackupFileName = engineName + '-' + today

          bat """
            echo ====================Backup database====================
            pg_dump -U postgres -f ${databaseBackupDir}\\${databaseName}-${today}.backup -F Custom -b ${databaseName}
          """

          nodeToExecute = (params.engine == 'performanceTestEngine') ? 'portal-slave' : 'master'
        }
      }
    }
    stage('replaceEngine') {
      agent {label nodeToExecute}
      steps {
        script {
          bat """
            echo ====================Backup data to restore in case build fails====================
            xcopy /s/y/h/e/k/i/q ${engineDir} ${engineBackupDir}\\${engineName}-${today}
            echo ====================Stop engine====================
            sc query "${serviceName}" | find /i "RUNNING"
            if not "%ERRORLEVEL%"=="1" ( net stop "${serviceName}" )
            echo ====================Rename current engine folder====================
            if exist ${renamedEngineDir} rmdir /s /q ${renamedEngineDir}
            :repeat
            ren "${engineDir}" "${engineName}-bk" || goto :repeat
            echo ====================Extract engine====================
            mvn clean compile -f AxonIvyPortal/PortalTest/pom.xml -Divy.engine.directory=${engineDir} %engineDownloadURL%
          """
          bat """
            echo ====================Copy license, configuration files====================
            copy /D/Y ${renamedEngineDir}\\configuration\\*.lic ${engineDir}\\configuration
            copy /D/Y ${renamedEngineDir}\\configuration\\serverconfig.xml ${engineDir}\\configuration
          """
          powershell """
            echo "====================Copy applications, misc/iis (for SSO)===================="
            if (Test-Path ${renamedEngineDir}\\applications) {
              copy -path ${renamedEngineDir}\\applications -recurse -force -destination ${engineDir}
            }
            copy -path ${renamedEngineDir}\\misc\\iis -recurse -force -destination ${engineDir}\\misc
          """
          bat """
            echo ====================Start engine====================
            net start "${serviceName}"
          """
        }
      }
    }
  }
}
