pipeline {
  agent {
    label 'linux'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }

  parameters {
    choice(name: 'engine', choices: ['master','performanceTest'], description: 'Engine to choose e.g. master')
  }

  stages {
    stage('backupDatabase') {
      steps {
        script {
          today = new Date().format('dd-MM-yyyy_HH-mm')
          config = [master:[engine: 'master', systemDatabase: 'AxonIvySystemDatabase-master'], 
          performanceTest:[engine:'performance-master', systemDatabase: 'AxonIvySystemDatabase-performance-master']]
          engineParentDir = '/var/tools/ivy/'
          engineDir = engineParentDir + config[params.engine]['engine']
          databaseBackupDir = '/var/database-backups/'
          databaseName = config[params.engine]['systemDatabase']
          dbBackupFile = databaseBackupDir + databaseName + '-' + today + '.dump'
          // Set SystemDb Autoconvert: true - migrate System DB automatically when upgrading ivy
          updateConfigFile(' true')
          
          if (params.engine == 'performanceTest') {
            sh """
              echo ====================Start engine performance test====================
              docker compose -f ${engineDir}/docker-compose.yml up -d
            """
          }

          sh """
            echo ====================Backup database====================
            cd ${engineDir}
            [ -d ${databaseBackupDir} ] ||  mkdir -p ${databaseBackupDir}
            docker exec -u postgres postgres pg_dump -Fc ${databaseName} > ${dbBackupFile}
          """
        }
      }
    }
    
    stage('upgradeEngine') {
      steps {
        script {
          if (params.engine == 'performanceTest') {
            sh """
              cd ${engineDir}
              echo ====================Stop engine performance test====================
              docker compose down
              docker compose pull
              docker compose up -d
            """
          } else {
            sh """
              echo ====================Upgrade engine====================
              cd ${engineDir}
              docker compose stop
              docker compose pull
              docker compose up -d
              # Wait engine starting so that Autoconvert: true takes affect
              sleep 100
            """
          }
          
          // Set SystemDb Autoconvert: false - avoid migrating SystemDB automatically when upgrading ivy manually
          updateConfigFile(' false')
        }
      }
    }
  }
}

def updateConfigFile(value) {
  sh """
    awk -F':' -v OFS=':' -v newval='${value}' '/^  Autoconvert:/{\$2=newval;print;next}1' ${engineDir}/ivy.yaml > ${engineDir}/tmp.yaml
    awk -F':' -v OFS=':' -v newval='${value}' '/^  Autoconvert:/{\$2=newval;print;next}1' ${engineDir}/tmp.yaml > ${engineDir}/ivy.yaml
    awk -F':' -v OFS=':' -v newval='${value}' '/^  Autoconvert:/{\$2=newval;print;next}1' ${engineDir}/configuration/ivy.yaml > ${engineDir}/configuration/tmp.yaml
    awk -F':' -v OFS=':' -v newval='${value}' '/^  Autoconvert:/{\$2=newval;print;next}1' ${engineDir}/configuration/tmp.yaml > ${engineDir}/configuration/ivy.yaml
  """
}