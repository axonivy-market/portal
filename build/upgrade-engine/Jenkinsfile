pipeline {
  agent {
    label 'linux'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }

  parameters {
    choice(name: 'engine', choices: ['portal','performanceTest'], description: 'Which engine to be upgraded?')
  }

  stages {
    stage('backupDatabase') {
      steps {
        script {
          today = new Date().format('dd-MM-yyyy_HH-mm')
          config = [portal:[engine: '10', postgresContainer: 'postgres-10', systemDatabase: 'AxonIvySystemDatabase-10'],
                    performanceTest:[engine: 'performance-10', postgresContainer: 'postgres-performance-10', systemDatabase: 'AxonIvySystemDatabase-performance-10']]
          engineParentDir = '/var/tools/ivy/'
          engineDir = engineParentDir + config[params.engine]['engine']
          postgresContainer = config[params.engine]['postgresContainer']
          systemDatabaseName = config[params.engine]['systemDatabase']
          databaseBackupDir = '/var/database-backups/'
          dbBackupFile = databaseBackupDir + systemDatabaseName + '-' + today + '.dump'

          if (params.engine == 'performanceTest') {
            sh """
              echo ====================Start engine performance test====================
              docker compose -f ${engineDir}/docker-compose.yml up -d
            """
          }

          sh """
            echo ====================Backup database====================
            [ -d ${databaseBackupDir} ] ||  mkdir -p ${databaseBackupDir}
            docker exec -u postgres ${postgresContainer} pg_dump -Fc ${systemDatabaseName} > ${dbBackupFile}
          """
        }
      }
    }

    stage('upgradeEngine') {
      steps {
        script {
          if (params.engine == 'performanceTest') {
            sh """
              cd ${engineDir}
              echo ====================Stop engine performance test====================
              docker compose down
              docker compose pull
            """
          } else {
            sh """
              echo ====================Upgrade engine====================
              cd ${engineDir}
              docker compose stop
              docker compose pull
              docker compose up -d
            """
          }
        }
      }
    }
  }
}


