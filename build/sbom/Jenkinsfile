pipeline {
  agent { label 'linux' }

  options {
    buildDiscarder(logRotator(numToKeepStr: '50', artifactNumToKeepStr: '5'))
  }

  triggers {
    cron('0 13 * * *')
  }

  environment {
    engineVersion = '12'
  }

  stages {
    stage('build') {
      steps {
        script {
          currentBuild.description = "On ${env.NODE_NAME}"
          builtModules = []
          docker.build('build-portal-modules', '-f build/Dockerfile .').inside('-v /var/tools/maven-cache:/home/build/') {
            def modules = ['AxonIvyPortal/portal-components', 'AxonIvyPortal/portal', 'AxonIvyPortal/PortalKitTestHelper', 'Showcase/portal-user-examples', 'Showcase/portal-developer-examples', 'Showcase/InternalSupport', 'Showcase/portal-components-examples']
            for (module in modules) {
              maven cmd: "clean install -f ${module}/pom.xml"
              builtModules.add(module)
            }
          }
        }
      }
    }
    stage('generate sboms') {
      steps {
        script {
          def utils = load 'build/common/utils.groovy'
          for (module in builtModules) {
              utils.generateBOMFile(module)
          }
          utils.mergeBOMFiles()
        }
      }
    }
  }
}