pipeline {
  agent {
    label 'linux'
  }
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }

  parameters {
      string(name: 'buildPluginVersion', defaultValue: '10.0.1', description: 'Axon Ivy build plugin version of all pom will be updated to.')
      string(name: 'ivyEngineVersion', defaultValue: '11.1.0', description: 'Axon Ivy engine version of all pom will be updated to.')
      string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip', description: '''Where to download engine? e.g.
        -Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip for nightly master
        -Divy.engine.download.url=https://developer.axonivy.com/permalink/dev/axonivy-engine.zip for dev master
      ''')
  }

  stages {
    stage('build') {
      steps {
        script {
          docker.build("portal", "-f build/Dockerfile .").inside("-v /var/tools/maven-cache:/home/build/") {
            withEnv(['GIT_SSH_COMMAND=ssh -o StrictHostKeyChecking=no']) {
              sshagent(credentials: ['github-axonivy']) {
                sh "git config --global user.name 'wawa-axonivy'"
                sh "git config --global user.email 'wawa.ivyteam@gmail.com'"
                sh "git remote set-url origin git@github.com:axonivy-market/portal.git"
                sh "git checkout -b ${BRANCH_NAME}"
                echo "====================Update version===================="
                maven cmd: "--batch-mode -f AxonIvyPortal/portal-components/pom.xml versions:set-property versions:commit -Dproperty=ivy.engine.version -DnewVersion=${params.ivyEngineVersion}"
                maven cmd: "--batch-mode -f AxonIvyPortal/portal-components/pom.xml versions:set-property versions:commit -Dproperty=build.plugin.version -DnewVersion=${params.buildPluginVersion}"

                echo "====================Commit to GIT===================="
                sh """
                  git commit -a -m "Updated all pom build.plugin.version=${buildPluginVersion}, ivy.engine.version=${ivyEngineVersion}"
                  git push origin -u $BRANCH_NAME
                """
                echo "====================Cache engine in local repository===================="
                cacheEngine()
              }
            }
          }
        }
      }
    }
  }
}

def updateVersion() {
  def modules = ['AxonIvyPortal/portal-components/pom.xml', 'AxonIvyPortal/portal/pom.xml', 'AxonIvyPortal/AxonIvyExpress/pom.xml', 'AxonIvyPortal/portal-migration/pom.xml',
    'AxonIvyPortal/PortalKitTestHelper/pom.xml', 'Showcase/portal-user-examples/pom.xml', 'Showcase/portal-developer-examples/pom.xml', 'Showcase/InternalSupport/pom.xml', 'Showcase/portal-components-examples/pom.xml']
                        def changeLog = ''
                        if (env.GIT_PREVIOUS_SUCCESSFUL_COMMIT) {
                            changeLog = sh(returnStdout: true, script: 'git diff --name-only $GIT_COMMIT $GIT_PREVIOUS_SUCCESSFUL_COMMIT').trim()
                        }
                        for (module in modules) {              
                            if (changeLog.contains(module) || params.modulesMustBeBuilt.contains(module.split('/')[1])) {
                                maven cmd: "clean install -f ${module}/pom.xml"
                                builtModules.add(module)
                            }
                        }
}

def cacheEngine() {
  sh """
    cd /var/tools/maven-cache/.m2/repository/.cache/ivy
    chmod 777 -R ${ivyEngineVersion}
    rm -r ${ivyEngineVersion}
  """
}