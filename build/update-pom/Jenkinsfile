pipeline {
  agent {
    label 'linux'
  }
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }

  parameters {
      string(name: 'buildPluginVersion', defaultValue: '10.0.1', description: 'Axon Ivy build plugin version of all pom will be updated to.')
      string(name: 'ivyEngineVersion', defaultValue: '11.1.0', description: 'Axon Ivy engine version of all pom will be updated to.')
      string(name: 'engineDownloadURL', defaultValue: '-Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip', description: '''Where to download engine? e.g.
        -Divy.engine.download.url=https://developer.axonivy.com/permalink/nightly/axonivy-engine.zip for nightly master
        -Divy.engine.download.url=https://developer.axonivy.com/permalink/dev/axonivy-engine.zip for dev master
      ''')
  }

  stages {
    stage('build') {
      steps {
        script {
          docker.build("portal", "-f build/Dockerfile .").inside("-v /var/tools/maven-cache:/home/build/") {
            sh "git config --global user.name 'wawa-axonivy'"
            sh "git config --global user.email 'wawa.ivyteam@gmail.com'"
            echo "====================Update version===================="
            maven cmd: "--batch-mode -f AxonIvyPortal/portal-components/pom.xml versions:set-property versions:commit -Dproperty=ivy.engine.version -DnewVersion=${params.ivyEngineVersion}"
            maven cmd: "--batch-mode -f AxonIvyPortal/portal-components/pom.xml versions:set-property versions:commit -Dproperty=build.plugin.version -DnewVersion=${params.buildPluginVersion}"

            echo "====================Commit to GIT===================="
            sh """
              git commit -a -m "Updated all pom build.plugin.version=${buildPluginVersion}, ivy.engine.version=${ivyEngineVersion}"
              git push origin $BRANCH_NAME
            """
            echo "====================Cache engine in local repository===================="
            cacheEngine()
            maven cmd: "clean install -f AxonIvyPortal/portal-components/pom.xml"
          }
        }
      }
    }
  }
}

def cacheEngine() {
  powershell '''
    rm -r /var/tools/maven-cache/.m2/repository/.cache/ivy/${ivyEngineVersion}
  '''
}