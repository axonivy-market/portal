Categories:
  AnnualLeave:
    name: Annual Leave
  Investment:
    name: Investment
  LeaveRequest:
    name: Leave Request
  OtherLeave:
    Maternity:
      name: Maternity
    SickLeave:
      Long:
        name: Long
      name: Sick Leave
    name: Other Leave
  Party:
    Drink:
      name: Drink
    Food:
      name: Food
    name: Party
  Payment:
    name: Payment
  Showcase:
    Application:
      name: Application
    Customized:
      TaskList:
        name: Custom task list
      name: Customized
    Error:
      IvyError:
        ShowIvyErrorPage:
          name: Show Ivy Error Page
        name: Ivy Error
      name: Error
    PortalDialogExample:
      name: Portal dialog example
    name: Showcase
CustomFields:
  Cases:
    AccountNumber:
      Description: Property of Additional Case details page
      Label: Account Number
    CreatedBillDate:
      Description: Property of Additional Case details page
      Label: Created Bill date
    CustomerName:
      Description: Customer name column for example
      Label: Customer name
    CustomerType:
      Description: Customer type column for example
      Label: Customer type
    InvoiceDate:
      Description: Property of Additional Case details page
      Label: Invoice date
    InvoiceDueDate:
      Description: Property of Additional Case details page
      Label: Invoice due date
    InvoiceNumber:
      Description: Property of Additional Case details page
      Label: Additional Case Data 1
    InvoiceQualityNumber:
      Description: Property of Additional Case details page
      Label: Invoice quality number
    InvoiceSubTotalAmount:
      Description: Property of Additional Case details page
      Label: Invoice Subtotal Amount
    InvoiceTotalAmount:
      Description: Property of Additional Case details page
      Label: Additional Case Data 1
    ShipmentDate:
      Description: Shipment date column for example
      Label: Shipment date
    SupportData:
      Description: Property of Additional Case details page
      Label: Invoice date
  Categories:
    CustomCaseWidget: Custom CaseWidget
    CustomTaskWidget: Custom TaskWidget
    DefaultAdditionalCaseDetai: Default additional Case details page
  Tasks:
    CustomerAddress:
      Description: Customer address field
      Label: Customer address
    CustomerEmail:
      Description: Customer email field
      Label: Customer email
    CustomerName:
      Description: Customer name column for example
      Label: Customer name
    CustomerType:
      Description: Customer type column for example
      Label: Customer type
    ShipmentDate:
      Description: Shipment date column for example
      Label: Shipment date
DefaultColumns:
  ACTIVATOR: Responsible
  APPLICATION: Application
  CREATION_TIME: Created
  CustomerName: Customer name
  EXPIRY_TIME: Expiry
  ID: Task Id
  NAME: Name / Description
  PRIORITY: Priority
  STATE: State
  ShipmentDate: Shipment date
  caseList:
    APPLICATION: Application
    CREATION_TIME: Created
    CREATOR: Creator
    CustomerName: Customer name
    FINISHED_TIME: Finished
    ID: Case Id
    NAME: Name / Description
    OWNER: Owner
    STATE: State
    ShipmentDate: Shipment date
Dialogs:
  Lists:
    Completeness:
      ADDITIONAL_IDENTIFICATION_NEEDED: Additional identification needed
      NO_INFORMATION: No information available
      PERSON_LEGITIMIZED: Person legitmized
      REQUEST_PROOF: Request proof of identification
    ProcessState:
      APPLICATION: Application
      DONE: Done
      IDENTITY_CHECK: Identity Check
      INFORMATION: Information
      INQUIRY: Inquiry
      PROCESSING: Edit
      VERIFICATION: Verification
  ch:
    ivyteam:
      ivy:
        project:
          portal:
            examples:
              testdata:
                LeaveRequestForm:
                  Employee: Employee
                  From: From
                  IsRequired: This field is mandatory
                  Representation: Representation
                  To: To
Labels:
  address: Street/No.
  cancel: Cancel
  caseId: Case ID
  city: /City
  date: Date
  delete: Delete
  email: E-Mail
  firstName: First name
  id: ID
  personalData: Personal data
  phoneNumber: Phone number
  proceed: Proceed
  reason: Reason
  request: Request
  requestType: Request type
  surName: Surname
  tableDelete: Delete
  tableDownload: Download
  tableName: Name
  zip: ZIP
Processes:
  CategoriedLeaveRequest:
    Cases:
      description: Leave Request Description
      name: Leave Request
    Tasks:
      AnnualLeave:
        description: Annual Leave Request Description
        name: Annual Leave Request
      MaternityLeave:
        description: Maternity Leave Request Description
        name: Maternity Leave Request
      SickLeave:
        description: Sick Leave Request Description
        name: Sick Leave Request
    description: This is a short description what you can expect behind this “Leave Request” example.
    name: Categoried Leave Request
    processStep: |-
      #Creation
      Choose different leave types
      Use a date picker to select leave dates
      Select an approver for your leave request
      #Approval
      Add a comment to the request
      Take a decision: Approve / Reject
      #Summary
      Requester will get a summary of the request
      Acknoledge the result
  MoreInformation:
    customProcessInfo: |-
      <h3><span class="mw-headline" id="Hello_world_example">Hello world example</span></h3>
      <p>The traditional <a href="/wiki/%22Hello,_world!%22_program" class="mw-redirect" title="&quot;Hello, world!&quot; program">Hello world program</a> can be written in Java as:<sup id="cite_ref-60" class="reference"><a href="#cite_note-60">[60]</a></sup>
      </p>
      <div class="mw-highlight mw-highlight-lang-java mw-content-ltr mw-highlight-lines" dir="ltr"><pre><span></span><span class="linenos" data-line="1"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">Main</span><span class="w"> </span><span class="p">{</span>
      <span class="linenos" data-line="2"></span><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">main</span><span class="p">(</span><span class="n">String</span><span class="o">[]</span><span class="w"> </span><span class="n">args</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
      <span class="linenos" data-line="3"></span><span class="w">        </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">"Hello World!"</span><span class="p">);</span><span class="w"> </span><span class="c1">// Prints the string to the console.</span>
      <span class="linenos" data-line="4"></span><span class="w">    </span><span class="p">}</span>
      <span class="linenos" data-line="5"></span><span class="p">}</span>
      </pre></div>
      <p>All source files must be named after the public class they contain, appending the suffix <code>.java</code>, for example, <code>HelloWorldApp.java</code>. It must first be compiled into bytecode, using a <a href="/wiki/Java_compiler" title="Java compiler">Java compiler</a>, producing a file with the <code>.class</code> suffix (<code>Main.class</code>, in this case). Only then can it be executed or launched. The Java source file may only contain one public class, but it can contain multiple classes with a non-public access modifier and any number of public <a href="/wiki/Inner_class" title="Inner class">inner classes</a>. When the source file contains multiple classes, it is necessary to make one class (introduced by the <code><b>class</b></code> keyword) public (preceded by the <code><b>public</b></code> keyword) and name the source file with that public class name.
      </p>
      <p>A class that is not declared public may be stored in any <code>.java</code> file. The compiler will generate a class file for each class defined in the source file. The name of the class file is the name of the class, with <i>.class</i> appended. For class file generation, <a href="/wiki/Class_(computer_programming)#Unnamed" title="Class (computer programming)">anonymous classes</a> are treated as if their name were the concatenation of the name of their enclosing class, a <i>$</i>, and an integer.
      </p>
      <p>The <a href="/wiki/List_of_Java_keywords" title="List of Java keywords">keyword</a> <code><b>public</b></code> denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy.<sup id="cite_ref-FOOTNOTEBloch201873–77§Item_15_Minimize_the_accessibility_of_classes_and_members_61-0" class="reference"><a href="#cite_note-FOOTNOTEBloch201873–77§Item_15_Minimize_the_accessibility_of_classes_and_members-61">[61]</a></sup> The class hierarchy is related to the name of the directory in which the .java file is located. This is called an access level modifier. Other access level modifiers include the keywords <code><b>private</b></code> (a method that can only be accessed in the same class) and <code><b>protected</b></code> (which allows code from the same package to access).<sup id="cite_ref-FOOTNOTEBloch201873–77§Item_15_Minimize_the_accessibility_of_classes_and_members_61-1" class="reference"><a href="#cite_note-FOOTNOTEBloch201873–77§Item_15_Minimize_the_accessibility_of_classes_and_members-61">[61]</a></sup> If a piece of code attempts to access private methods or protected methods, the JVM will throw a <code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/lang/SecurityException.html">SecurityException</a></code>.
      </p>
      <p>The keyword <code><b>static</b></code> in front of a method indicates a <a href="/wiki/Method_(computer_programming)#Static_methods" title="Method (computer programming)">static method</a>, which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an object. Static methods cannot access any class members that are not also static. Methods that are not designated static are instance methods and require a specific instance of a class to operate.
      </p>
      <p>The keyword <code><b>void</b></code> indicates that the main method does not return any value to the caller. If a Java program is to exit with an error code, it must call <code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/lang/System.html#exit(int)">System.exit()</a></code> explicitly.
      </p>
      <p>The method name <code>main</code> is not a keyword in the Java language. It is simply the name of the method the Java launcher calls to pass control to the program. Java classes that run in managed environments such as applets and <a href="/wiki/Enterprise_JavaBeans" class="mw-redirect" title="Enterprise JavaBeans">Enterprise JavaBeans</a> do not use or need a <code>main()</code> method. A Java program may contain multiple classes that have <code>main</code> methods, which means that the VM needs to be explicitly told which class to launch from.
      </p>
      <p>The main method must accept an <a href="/wiki/Array_data_type" class="mw-redirect" title="Array data type">array</a> of <b><code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/String.html">String</a></code></b> objects. By convention, it is referenced as <code><b>args</b></code> although any other legal identifier name can be used. Since Java&nbsp;5, the main method can also use <a href="/wiki/Variadic_function" title="Variadic function">variable arguments</a>, in the form of <code>public static void main(String... args)</code>, allowing the main method to be invoked with an arbitrary number of <code>String</code> arguments. The effect of this alternate declaration is semantically identical (to the <code>args</code> parameter which is still an array of <code>String</code> objects), but it allows an alternative syntax for creating and passing the array.
      </p>
      <p>The Java launcher launches Java by loading a given class (specified on the command line or as an attribute in a <a href="/wiki/JAR_(file_format)" title="JAR (file format)">JAR</a>) and starting its <code>public static void main(String[])</code> method. Stand-alone programs must declare this method explicitly. The <code>String[] args</code> parameter is an array of <code>String</code> objects containing any arguments passed to the class. The parameters to <code>main</code> are often passed by means of a <a href="/wiki/Command-line_interface" title="Command-line interface">command line</a>.
      </p>
      <p>Printing is part of a Java standard library: The <b><code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/System.html">System</a></code></b> class defines a public static field called <b><code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/System.html#out">out</a></code></b>. The <code>out</code> object is an instance of the <code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/io/PrintStream.html">PrintStream</a></code> class and provides many methods for printing data to <a href="/wiki/Standard_streams" title="Standard streams">standard out</a>, including <b><code><a rel="nofollow" class="external text" href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/io/PrintStream.html#println(java.lang.String)">println(String)</a></code></b> which also appends a new line to the passed <a href="/wiki/String_(computer_science)" title="String (computer science)">string</a>.
      </p>
      <p>The string <code>"Hello World!"</code> is automatically converted to a String object by the compiler.
      </p>
      <h2><span class="mw-headline" id="References">References</span></h2>
      <div class="reflist reflist-columns references-column-width" style="column-width: 25em;">
      <ol class="references">
      <li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><style data-mw-deduplicate="TemplateStyles:r1133582631">.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}</style><cite id="CITEREFBinstock,_Andrew2015" class="citation magazine cs1">Binstock, Andrew (May 20, 2015). <a rel="nofollow" class="external text" href="https://www.forbes.com/sites/oracle/2015/05/20/javas-20-years-of-innovation/">"Java's 20 Years of Innovation"</a>. <i>Forbes</i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20160314102242/http://www.forbes.com/sites/oracle/2015/05/20/javas-20-years-of-innovation/">Archived</a> from the original on March 14, 2016<span class="reference-accessdate">. Retrieved <span class="nowrap">March 18,</span> 2016</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=Forbes&amp;rft.atitle=Java%27s+20+Years+of+Innovation&amp;rft.date=2015-05-20&amp;rft.au=Binstock%2C+Andrew&amp;rft_id=https%3A%2F%2Fwww.forbes.com%2Fsites%2Foracle%2F2015%2F05%2F20%2Fjavas-20-years-of-innovation%2F&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-BarbaraLiskov-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-BarbaraLiskov_2-0"><span class="cite-accessibility-label">Jump up to: </span><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-BarbaraLiskov_2-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-BarbaraLiskov_2-2"><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-BarbaraLiskov_2-3"><sup><i><b>d</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFBarbara_Liskov_with_John_Guttag2000" class="citation book cs1"><a href="/wiki/Barbara_Liskov" title="Barbara Liskov">Barbara Liskov</a> with <a href="/wiki/John_Guttag" title="John Guttag">John Guttag</a> (2000). <i>Program Development in Java - Abstraction, Specification, and Object-Oriented Design</i>. USA, Addison Wesley. <a href="/wiki/ISBN_(identifier)" class="mw-redirect" title="ISBN (identifier)">ISBN</a>&nbsp;<a href="/wiki/Special:BookSources/9780201657685" title="Special:BookSources/9780201657685"><bdi>9780201657685</bdi></a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Program+Development+in+Java+-+Abstraction%2C+Specification%2C+and+Object-Oriented+Design&amp;rft.pub=USA%2C+Addison+Wesley&amp;rft.date=2000&amp;rft.isbn=9780201657685&amp;rft.au=Barbara+Liskov+with+John+Guttag&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFChaudhary2014" class="citation web cs1">Chaudhary, Harry H. (July 28, 2014). <a rel="nofollow" class="external text" href="https://books.google.com/books?id=0rUtBAAAQBAJ&amp;pg=PAPA133">"Cracking The Java Programming Interview&nbsp;:: 2000+ Java Interview Que/Ans"</a>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20230929040943/https://books.google.com/books?id=0rUtBAAAQBAJ&amp;pg=PAPA133#v=onepage&amp;q&amp;f=false">Archived</a> from the original on September 29, 2023<span class="reference-accessdate">. Retrieved <span class="nowrap">May 29,</span> 2016</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Cracking+The+Java+Programming+Interview+%3A%3A+2000%2B+Java+Interview+Que%2FAns&amp;rft.date=2014-07-28&amp;rft.aulast=Chaudhary&amp;rft.aufirst=Harry+H.&amp;rft_id=https%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3D0rUtBAAAQBAJ%26pg%3DPAPA133&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text">Java&nbsp;5.0 added several new language features (the <a href="/wiki/Foreach_loop" title="Foreach loop">enhanced for loop</a>, <a href="/wiki/Object_type_(object-oriented_programming)#Autoboxing" class="mw-redirect" title="Object type (object-oriented programming)">autoboxing</a>, <a href="/wiki/Variadic_function" title="Variadic function">varargs</a> and <a href="/wiki/Java_annotation" title="Java annotation">annotations</a>), after they were introduced in the similar (and competing) <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> language. <a rel="nofollow" class="external autonumber" href="http://www.barrycornelius.com/papers/java5/">[1]</a> <a rel="nofollow" class="external text" href="https://web.archive.org/web/20110319065438/http://www.barrycornelius.com/papers/java5/">Archived</a> March 19, 2011, at the <a href="/wiki/Wayback_Machine" title="Wayback Machine">Wayback Machine</a> <a rel="nofollow" class="external autonumber" href="http://www.levenez.com/lang/">[2]</a> <a rel="nofollow" class="external text" href="https://web.archive.org/web/20060107162045/http://www.levenez.com/lang/">Archived</a> January 7, 2006, at the <a href="/wiki/Wayback_Machine" title="Wayback Machine">Wayback Machine</a></span>
      </li>
      <li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFGosling,_JamesMcGilton,_Henry1996" class="citation web cs1">Gosling, James; McGilton, Henry (May 1996). <a rel="nofollow" class="external text" href="https://www.oracle.com/technetwork/java/langenv-140151.html">"The Java Language Environment"</a>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20140506214653/http://www.oracle.com/technetwork/java/langenv-140151.html">Archived</a> from the original on May 6, 2014<span class="reference-accessdate">. Retrieved <span class="nowrap">May 6,</span> 2014</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=The+Java+Language+Environment&amp;rft.date=1996-05&amp;rft.au=Gosling%2C+James&amp;rft.au=McGilton%2C+Henry&amp;rft_id=https%3A%2F%2Fwww.oracle.com%2Ftechnetwork%2Fjava%2Flangenv-140151.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFGosling,_JamesJoy,_BillSteele,_GuyBracha,_Gilad" class="citation web cs1">Gosling, James; Joy, Bill; Steele, Guy; Bracha, Gilad. <a rel="nofollow" class="external text" href="https://java.sun.com/docs/books/jls/second_edition/html/intro.doc.html#237601">"The Java Language Specification, 2nd Edition"</a>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20110805051057/http://java.sun.com/docs/books/jls/second_edition/html/intro.doc.html#237601">Archived</a> from the original on August 5, 2011<span class="reference-accessdate">. Retrieved <span class="nowrap">February 8,</span> 2008</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=The+Java+Language+Specification%2C+2nd+Edition&amp;rft.au=Gosling%2C+James&amp;rft.au=Joy%2C+Bill&amp;rft.au=Steele%2C+Guy&amp;rft.au=Bracha%2C+Gilad&amp;rft_id=https%3A%2F%2Fjava.sun.com%2Fdocs%2Fbooks%2Fjls%2Fsecond_edition%2Fhtml%2Fintro.doc.html%23237601&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20090105145818/http://www.computerworld.com.au/index.php/id%3B1422447371%3Bpp%3B3%3Bfp%3B4194304%3Bfpid%3B1">"The A-Z of Programming Languages: Modula-3"</a>. Computerworld.com.au. Archived from <a rel="nofollow" class="external text" href="http://www.computerworld.com.au/index.php/id;1422447371;pp;3;fp;4194304;fpid;1">the original</a> on January 5, 2009<span class="reference-accessdate">. Retrieved <span class="nowrap">June 9,</span> 2010</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=The+A-Z+of+Programming+Languages%3A+Modula-3&amp;rft.pub=Computerworld.com.au&amp;rft_id=http%3A%2F%2Fwww.computerworld.com.au%2Findex.php%2Fid%3B1422447371%3Bpp%3B3%3Bfp%3B4194304%3Bfpid%3B1&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> stated on a number of public occasions, e.g. in a lecture at the Polytechnic Museum, Moscow in September 2005 (several independent first-hand accounts in Russian exist, e.g. one with an audio recording: <link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFFilippova,_Elena2005" class="citation web cs1">Filippova, Elena (September 22, 2005). <a rel="nofollow" class="external text" href="http://www.delphikingdom.com/asp/viewitem.asp?catalogid=1155">"Niklaus Wirth's lecture at the Polytechnic Museum in Moscow"</a>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20201201054813/http://www.delphikingdom.com/asp/viewitem.asp?catalogid=1155">Archived</a> from the original on December 1, 2020<span class="reference-accessdate">. Retrieved <span class="nowrap">November 20,</span> 2011</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Niklaus+Wirth%27s+lecture+at+the+Polytechnic+Museum+in+Moscow&amp;rft.date=2005-09-22&amp;rft.au=Filippova%2C+Elena&amp;rft_id=http%3A%2F%2Fwww.delphikingdom.com%2Fasp%2Fviewitem.asp%3Fcatalogid%3D1155&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span>), that the Sun Java design team licensed the Oberon compiler sources a number of years prior to the release of Java and examined it: a (relative) compactness, type safety, garbage collection, no multiple inheritance for classes&nbsp;–  all these key overall design features are shared by Java and Oberon.</span>
      </li>
      <li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><a href="/wiki/Patrick_Naughton" title="Patrick Naughton">Patrick Naughton</a> cites <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a> as a strong influence on the design of the Java programming language, stating that notable direct derivatives include Java interfaces (derived from Objective-C's <a href="/wiki/Objective-C#Protocols" title="Objective-C">protocol</a>) and primitive wrapper classes. <a rel="nofollow" class="external autonumber" href="http://cs.gmu.edu/~sean/stuff/java-objc.html">[3]</a> <a rel="nofollow" class="external text" href="https://web.archive.org/web/20110713014816/http://cs.gmu.edu/~sean/stuff/java-objc.html">Archived</a> July 13, 2011, at the <a href="/wiki/Wayback_Machine" title="Wayback Machine">Wayback Machine</a></span>
      </li>
      <li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFTechMetrix_Research1999" class="citation web cs1">TechMetrix Research (1999). <a rel="nofollow" class="external text" href="https://web.archive.org/web/20101229090912/http://www.fscript.org/prof/javapassport.pdf">"History of Java"</a> <span class="cs1-format">(PDF)</span>. <i>Java Application Servers Report</i>. Archived from <a rel="nofollow" class="external text" href="http://www.fscript.org/prof/javapassport.pdf">the original</a> <span class="cs1-format">(PDF)</span> on December 29, 2010. <q>The project went ahead under the name <i>green</i> and the language was based on an old model of <a href="/wiki/UCSD_Pascal" title="UCSD Pascal">UCSD Pascal</a>, which makes it possible to generate interpretive code.</q></cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=Java+Application+Servers+Report&amp;rft.atitle=History+of+Java&amp;rft.date=1999&amp;rft.au=TechMetrix+Research&amp;rft_id=http%3A%2F%2Fwww.fscript.org%2Fprof%2Fjavapassport.pdf&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="http://queue.acm.org/detail.cfm?id=1017013">"A Conversation with James Gosling – ACM Queue"</a>. Queue.acm.org. August 31, 2004. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20150716194245/http://queue.acm.org/detail.cfm?id=1017013">Archived</a> from the original on July 16, 2015<span class="reference-accessdate">. Retrieved <span class="nowrap">June 9,</span> 2010</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=A+Conversation+with+James+Gosling+%E2%80%93+ACM+Queue&amp;rft.pub=Queue.acm.org&amp;rft.date=2004-08-31&amp;rft_id=http%3A%2F%2Fqueue.acm.org%2Fdetail.cfm%3Fid%3D1017013&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFThe_Java_Language_Team" class="citation report cs1">The Java Language Team. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20120627043929/http://java.sun.com/docs/white/delegates.html">About Microsoft's "Delegates"</a> (White Paper). JavaSoft, Sun Microsystems, Inc. Archived from <a rel="nofollow" class="external text" href="http://java.sun.com/docs/white/delegates.html">the original</a> on June 27, 2012. <q>In the summer of 1996, Sun was designing the precursor to what is now the event model of the AWT and the JavaBeans component architecture. Borland contributed greatly to this process. We looked very carefully at Delphi Object Pascal and built a working prototype of bound method references in order to understand their interaction with the Java programming language and its APIs.</q></cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=report&amp;rft.btitle=About+Microsoft%27s+%22Delegates%22&amp;rft.pub=JavaSoft%2C+Sun+Microsystems%2C+Inc.&amp;rft.au=The+Java+Language+Team&amp;rft_id=http%3A%2F%2Fjava.sun.com%2Fdocs%2Fwhite%2Fdelegates.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-chplspec-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-chplspec_13-0" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="http://chapel.cray.com/spec/spec-0.98.pdf">"Chapel spec (Acknowledgements)"</a> <span class="cs1-format">(PDF)</span>. Cray Inc. October 1, 2015. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20160205114946/http://chapel.cray.com/spec/spec-0.98.pdf">Archived</a> <span class="cs1-format">(PDF)</span> from the original on February 5, 2016<span class="reference-accessdate">. Retrieved <span class="nowrap">January 14,</span> 2016</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Chapel+spec+%28Acknowledgements%29&amp;rft.pub=Cray+Inc.&amp;rft.date=2015-10-01&amp;rft_id=http%3A%2F%2Fchapel.cray.com%2Fspec%2Fspec-0.98.pdf&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-gambas-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-gambas_14-0" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="http://gambaswiki.org/wiki/doc/intro?nh&amp;l=en">"Gambas Documentation Introduction"</a>. Gambas Website. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20171009041815/http://gambaswiki.org/wiki/doc/intro?nh&amp;l=en">Archived</a> from the original on October 9, 2017<span class="reference-accessdate">. Retrieved <span class="nowrap">October 9,</span> 2017</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Gambas+Documentation+Introduction&amp;rft.pub=Gambas+Website&amp;rft_id=http%3A%2F%2Fgambaswiki.org%2Fwiki%2Fdoc%2Fintro%3Fnh%26l%3Den&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation magazine cs1"><a rel="nofollow" class="external text" href="http://www.infoworld.com/article/2610885/facebook-q-a--hack-brings-static-typing-to-php-world.html">"Facebook Q&amp;A: Hack brings static typing to PHP world"</a>. <i>InfoWorld</i>. March 26, 2014. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20150213220946/http://www.infoworld.com/article/2610885/facebook-q-a--hack-brings-static-typing-to-php-world.html">Archived</a> from the original on February 13, 2015<span class="reference-accessdate">. Retrieved <span class="nowrap">January 11,</span> 2015</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=InfoWorld&amp;rft.atitle=Facebook+Q%26A%3A+Hack+brings+static+typing+to+PHP+world&amp;rft.date=2014-03-26&amp;rft_id=http%3A%2F%2Fwww.infoworld.com%2Farticle%2F2610885%2Ffacebook-q-a--hack-brings-static-typing-to-php-world.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="http://www.computerweekly.com/Articles/2002/05/02/186793/write-once-run-anywhere.htm">"Write once, run anywhere?"</a>. <a href="/wiki/Computer_Weekly" title="Computer Weekly">Computer Weekly</a>. May 2, 2002. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20210813193857/https://www.computerweekly.com/feature/Write-once-run-anywhere">Archived</a> from the original on August 13, 2021<span class="reference-accessdate">. Retrieved <span class="nowrap">July 27,</span> 2009</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Write+once%2C+run+anywhere%3F&amp;rft.pub=Computer+Weekly&amp;rft.date=2002-05-02&amp;rft_id=http%3A%2F%2Fwww.computerweekly.com%2FArticles%2F2002%2F05%2F02%2F186793%2Fwrite-once-run-anywhere.htm&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-design_goals-17"><span class="mw-cite-backlink">^ <a href="#cite_ref-design_goals_17-0"><span class="cite-accessibility-label">Jump up to: </span><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-design_goals_17-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-design_goals_17-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://www.oracle.com/technetwork/java/intro-141325.html">"1.2 Design Goals of the Java Programming Language"</a>. Oracle. January 1, 1999. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20130123204103/http://www.oracle.com/technetwork/java/intro-141325.html">Archived</a> from the original on January 23, 2013<span class="reference-accessdate">. Retrieved <span class="nowrap">January 14,</span> 2013</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=1.2+Design+Goals+of+the+Java+Programming+Language&amp;rft.pub=Oracle&amp;rft.date=1999-01-01&amp;rft_id=https%3A%2F%2Fwww.oracle.com%2Ftechnetwork%2Fjava%2Fintro-141325.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-18" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFMelanson2022" class="citation web cs1">Melanson, Mike (August 9, 2022). <a rel="nofollow" class="external text" href="https://github.com/readme/featured/java-programming-language">"Don't call it a comeback: Why Java is still champ"</a>. <i><a href="/wiki/GitHub" title="GitHub">GitHub</a></i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20230825195416/https://github.com/readme/featured/java-programming-language">Archived</a> from the original on August 25, 2023<span class="reference-accessdate">. Retrieved <span class="nowrap">October 15,</span> 2023</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=GitHub&amp;rft.atitle=Don%27t+call+it+a+comeback%3A+Why+Java+is+still+champ&amp;rft.date=2022-08-09&amp;rft.aulast=Melanson&amp;rft.aufirst=Mike&amp;rft_id=https%3A%2F%2Fgithub.com%2Freadme%2Ffeatured%2Fjava-programming-language&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-19" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://octoverse.github.com/2022/top-programming-languages">"The top programming languages"</a>. <i><a href="/wiki/GitHub" title="GitHub">GitHub</a></i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20230802203718/https://octoverse.github.com/2022/top-programming-languages">Archived</a> from the original on August 2, 2023<span class="reference-accessdate">. Retrieved <span class="nowrap">October 15,</span> 2023</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=GitHub&amp;rft.atitle=The+top+programming+languages&amp;rft_id=https%3A%2F%2Foctoverse.github.com%2F2022%2Ftop-programming-languages&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-20" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://www.tiobe.com/tiobe-index/">"TIOBE Index for October 2023"</a>. <i><a href="/wiki/TIOBE_index" title="TIOBE index">TIOBE index</a></i><span class="reference-accessdate">. Retrieved <span class="nowrap">October 15,</span> 2023</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=TIOBE+index&amp;rft.atitle=TIOBE+Index+for+October+2023&amp;rft_id=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-:0-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-:0_21-0" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFMcMillan2013" class="citation magazine cs1">McMillan, Robert (August 1, 2013). <a rel="nofollow" class="external text" href="https://www.wired.com/2013/01/java-no-longer-a-favorite/">"Is Java Losing Its Mojo?"</a>. <i><a href="/wiki/Wired.com" class="mw-redirect" title="Wired.com">wired.com</a></i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20170215115409/https://www.wired.com/2013/01/java-no-longer-a-favorite/">Archived</a> from the original on February 15, 2017<span class="reference-accessdate">. Retrieved <span class="nowrap">October 15,</span> 2023</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=article&amp;rft.jtitle=wired.com&amp;rft.atitle=Is+Java+Losing+Its+Mojo%3F&amp;rft.date=2013-08-01&amp;rft.aulast=McMillan&amp;rft.aufirst=Robert&amp;rft_id=https%3A%2F%2Fwww.wired.com%2F2013%2F01%2Fjava-no-longer-a-favorite%2F&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFByousc._1998" class="citation web cs1">Byous, Jon (c. 1998). <a rel="nofollow" class="external text" href="https://web.archive.org/web/20050420081440/http://java.sun.com/features/1998/05/birthday.html">"Java technology: The early years"</a>. <i>Sun Developer Network</i>. <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>. Archived from <a rel="nofollow" class="external text" href="https://java.sun.com/features/1998/05/birthday.html">the original</a> on April 20, 2005<span class="reference-accessdate">. Retrieved <span class="nowrap">April 22,</span> 2005</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=Sun+Developer+Network&amp;rft.atitle=Java+technology%3A+The+early+years&amp;rft.aulast=Byous&amp;rft.aufirst=Jon&amp;rft_id=https%3A%2F%2Fjava.sun.com%2Ffeatures%2F1998%2F05%2Fbirthday.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text">Object-oriented programming <link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20100210225651/http://www.java.com/en/javahistory/">"The History of Java Technology"</a>. <i>Sun Developer Network</i>. c. 1995. Archived from <a rel="nofollow" class="external text" href="http://www.java.com/en/javahistory/">the original</a> on February 10, 2010<span class="reference-accessdate">. Retrieved <span class="nowrap">April 30,</span> 2010</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=Sun+Developer+Network&amp;rft.atitle=The+History+of+Java+Technology&amp;rft_id=http%3A%2F%2Fwww.java.com%2Fen%2Fjavahistory%2F&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-24" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite id="CITEREFMurphy1996" class="citation web cs1">Murphy, Kieron (October 4, 1996). <a rel="nofollow" class="external text" href="https://www.infoworld.com/article/2077265/so-why-did-they-decide-to-call-it-java-.html">"So why did they decide to call it Java?"</a>. <i><a href="/wiki/JavaWorld" class="mw-redirect" title="JavaWorld">JavaWorld</a></i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20200713234202/https://www.infoworld.com/article/2077265/so-why-did-they-decide-to-call-it-java-.html">Archived</a> from the original on July 13, 2020<span class="reference-accessdate">. Retrieved <span class="nowrap">July 13,</span> 2020</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=JavaWorld&amp;rft.atitle=So+why+did+they+decide+to+call+it+Java%3F&amp;rft.date=1996-10-04&amp;rft.aulast=Murphy&amp;rft.aufirst=Kieron&amp;rft_id=https%3A%2F%2Fwww.infoworld.com%2Farticle%2F2077265%2Fso-why-did-they-decide-to-call-it-java-.html&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-25" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text">Kabutz, Heinz; <a rel="nofollow" class="external text" href="http://www.artima.com/weblogs/viewpost.jsp?thread=7555"><i>Once Upon an Oak</i></a> <a rel="nofollow" class="external text" href="https://web.archive.org/web/20070413072630/http://www.artima.com/weblogs/viewpost.jsp?thread=7555">Archived</a> April 13, 2007, at the <a href="/wiki/Wayback_Machine" title="Wayback Machine">Wayback Machine</a>. Artima. Retrieved April 29, 2007.</span>
      </li>
      <li id="cite_note-oraclejavahistory-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-oraclejavahistory_26-0" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20070310235103/http://www.sun.com/smi/Press/sunflash/1996-01/sunflash.960123.10561.xml">"JAVASOFT SHIPS JAVA 1.0"</a>. Archived from <a rel="nofollow" class="external text" href="http://www.sun.com/smi/Press/sunflash/1996-01/sunflash.960123.10561.xml">the original</a> on March 10, 2007<span class="reference-accessdate">. Retrieved <span class="nowrap">May 13,</span> 2018</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=JAVASOFT+SHIPS+JAVA+1.0&amp;rft_id=http%3A%2F%2Fwww.sun.com%2Fsmi%2FPress%2Fsunflash%2F1996-01%2Fsunflash.960123.10561.xml&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-27" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation book cs1"><a rel="nofollow" class="external text" href="https://books.google.com/books?id=rXGMFYXFDwMC"><i>Object-oriented Programming with Java: Essentials and Applications</i></a>. Tata McGraw-Hill Education. p.&nbsp;34.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=book&amp;rft.btitle=Object-oriented+Programming+with+Java%3A+Essentials+and+Applications&amp;rft.pages=34&amp;rft.pub=Tata+McGraw-Hill+Education&amp;rft_id=https%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DrXGMFYXFDwMC&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-28" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="http://www.open-std.org/JTC1/SC22/JSG/">"JSG – Java Study Group"</a>. <i>open-std.org</i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20060825082008/http://www.open-std.org/JTC1/SC22/JSG/">Archived</a> from the original on August 25, 2006<span class="reference-accessdate">. Retrieved <span class="nowrap">August 2,</span> 2006</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=open-std.org&amp;rft.atitle=JSG+%E2%80%93+Java+Study+Group&amp;rft_id=http%3A%2F%2Fwww.open-std.org%2FJTC1%2FSC22%2FJSG%2F&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-29" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="http://www.computer.org/csdl/proceedings/hicss/2001/0981/05/09815015.pdf">"Why Java Was – Not – Standardized Twice"</a> <span class="cs1-format">(PDF)</span>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20140113101235/http://www.computer.org/csdl/proceedings/hicss/2001/0981/05/09815015.pdf">Archived</a> <span class="cs1-format">(PDF)</span> from the original on January 13, 2014<span class="reference-accessdate">. Retrieved <span class="nowrap">June 3,</span> 2018</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.genre=unknown&amp;rft.btitle=Why+Java+Was+%E2%80%93+Not+%E2%80%93+Standardized+Twice&amp;rft_id=http%3A%2F%2Fwww.computer.org%2Fcsdl%2Fproceedings%2Fhicss%2F2001%2F0981%2F05%2F09815015.pdf&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      <li id="cite_note-30"><span class="mw-cite-backlink"><b><a href="#cite_ref-30" aria-label="Jump up" title="Jump up">^</a></b></span> <span class="reference-text"><link rel="mw-deduplicated-inline-style" href="mw-data:TemplateStyles:r1133582631"><cite class="citation web cs1"><a rel="nofollow" class="external text" href="https://www.zdnet.com/news/what-is-ecma-and-why-microsoft-cares/298821">"What is ECMA—and why Microsoft cares"</a>. <i><a href="/wiki/ZDNet" class="mw-redirect" title="ZDNet">ZDNet</a></i>. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20140506215226/http://www.zdnet.com/news/what-is-ecma-and-why-microsoft-cares/298821">Archived</a> from the original on May 6, 2014<span class="reference-accessdate">. Retrieved <span class="nowrap">May 6,</span> 2014</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.genre=unknown&amp;rft.jtitle=ZDNet&amp;rft.atitle=What+is+ECMA%E2%80%94and+why+Microsoft+cares&amp;rft_id=http%3A%2F%2Fwww.zdnet.com%2Fnews%2Fwhat-is-ecma-and-why-microsoft-cares%2F298821&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AJava+%28programming+language%29" class="Z3988"></span></span>
      </li>
      </ol></div>
  Payment:
    Tasks:
      Pay:
        name: Do New Payment
      Signal:
        name: Signal create New Payment
    name: Create New Payment
  ProcessWithIndex:
    name1: Process With Index 1
    name2: Process With Index 2
  TasksForTaskListCustomization:
    Cases:
      Party:
        description: A social gathering of invited guests, typically involving eating, drinking, and entertainment.
        name: Prepare a party
    Tasks:
      BeerOrder:
        description: Beer for a big company with 10.000 people
        name: Beer Order
      MilkTeaOrder:
        description: Milk tea for 4 people
        name: Milk Tea Order
      PizzaOrder:
        description: Pizza for 10 people
        name: Pizza Order
    description: Create 3 tasks, each task has CustomerName and ShipmentDate
    name: Create Tasks For Task List Customization
sortFields:
  CREATION_TIME_ASC: Creation date (Oldest first)
  CREATION_TIME_DESC: Creation date (Newest first)
  CustomerName_ASC: Customer name (A -> Z)
  CustomerName_DESC: Customer name (Z -> A)
  EXPIRY_TIME_ASC: Expiry (Oldest first)
  EXPIRY_TIME_DESC: Expiry (Newest first)
  PRIORITY_ASC: Priority (High -> low)
  PRIORITY_DESC: Priority (Low -> high)
  ShipmentDate_ASC: Shipment date (Oldest first)
  ShipmentDate_DESC: Shipment date (Newest first)
