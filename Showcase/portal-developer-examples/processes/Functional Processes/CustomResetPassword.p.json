{
  "$schema" : "https://json-schema.axonivy.com/process/11.2.2/process.json",
  "id" : "1764BD56C1021D5F",
  "kind" : "CALLABLE_SUB",
  "config" : {
    "data" : "com.axonivy.portal.developerexamples.CustomResetPasswordData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "CallSubStart",
      "name" : "portalResetPassword(String,String,String,String)",
      "config" : {
        "signature" : "portalResetPassword",
        "input" : {
          "params" : [
            { "name" : "newPassword", "type" : "String", "desc" : "" },
            { "name" : "passwordConfirmation", "type" : "String", "desc" : "" },
            { "name" : "token", "type" : "String", "desc" : "" },
            { "name" : "username", "type" : "String", "desc" : "" }
          ],
          "map" : {
            "out.newPassword" : "param.newPassword",
            "out.passwordConfirmation" : "param.passwordConfirmation",
            "out.token" : "param.token",
            "out.username" : "param.username"
          }
        },
        "result" : {
          "params" : [
            { "name" : "message", "type" : "String", "desc" : "" },
            { "name" : "resetSuccess", "type" : "Boolean", "desc" : "" }
          ],
          "map" : {
            "result.message" : "in.message",
            "result.resetSuccess" : "in.resetSuccess"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 64 }
      },
      "connect" : [
        { "id" : "f3", "to" : "f16" }
      ]
    }, {
      "id" : "f1",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 448, "y" : 64 }
      }
    }, {
      "id" : "f16",
      "type" : "Script",
      "name" : "reset password",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivy.addon.portalkit.service.PasswordCheckingService;",
            "import ch.ivy.addon.portalkit.bo.PasswordValidationStatus;",
            "import ch.ivy.addon.portalkit.util.UserUtils;",
            "import ch.ivy.addon.portalkit.constant.UserProperty;",
            "import javax.faces.application.FacesMessage;",
            "import javax.faces.context.FacesContext;",
            "import org.apache.commons.lang.StringUtils;",
            "import ch.ivyteam.ivy.security.IUser;",
            "import ch.ivy.addon.portalkit.util.UserUtils;",
            "import ch.ivyteam.ivy.environment.Ivy;",
            "import com.axonivy.portal.components.util.HtmlParser;",
            "",
            "in.message = \"\";",
            "in.resetSuccess = false;",
            "try {",
            "  PasswordValidationStatus pwValidationStatus = PasswordCheckingService.getInstance().isPasswordStrongEnough(in.newPassword);",
            "  if(!pwValidationStatus.getStatus()) {",
            "    in.message = pwValidationStatus.getMessage();",
            "  } else {",
            "    // find user by username",
            "    IUser user = StringUtils.isNotBlank(in.username) ? UserUtils.findUserByUsername(in.username) : null;",
            "    // validate token",
            "    if (UserUtils.isValidPasswordResetToken(in.token, user)) {",
            "      // update user password",
            "      user.setPassword(in.newPassword);",
            "      user.setProperty(UserProperty.RESET_PASSWORD_TOKEN, \"\");",
            "      user.setProperty(UserProperty.RESET_PASSWORD_TOKEN_EXPIRY, \"\");",
            "      in.message = ivy.cms.co(\"/ch.ivy.addon.portalkit.ui.jsf/forgotPassword/passwordResetSuccess\");",
            "      in.resetSuccess = true;",
            "    } else {",
            "      in.message = ivy.cms.co(\"/ch.ivy.addon.portalkit.ui.jsf/forgotPassword/invalidToken\");",
            "    }",
            "  }",
            "} catch (Exception e) {",
            "  Ivy.log().error(\"An error occurred while changing your password: {0}\", e.getMessage());",
            "  in.message = ivy.cms.co(\"/ch.ivy.addon.portalkit.ui.jsf/passwordSetting/changePasswordWSError\");",
            "}",
            "if (!in.resetSuccess) {",
            "  FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, HtmlParser.sanitize(in.message), null));",
            "  FacesContext.getCurrentInstance().validationFailed();",
            "} else {",
            "  FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, HtmlParser.sanitize(in.message), null));",
            "}"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 272, "y" : 64 }
      },
      "connect" : [
        { "id" : "f2", "to" : "f1" }
      ]
    } ]
}