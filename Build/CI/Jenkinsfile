pipeline {
  agent any
  
  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }
  
  triggers {
    pollSCM 'H/15 * * * *'
  }

  tools { 
      maven 'default' 
      jdk 'jdk11' 
  }

  stages {
    stage('build') {
      steps {
        script {
          def modules = ['AxonIvyPortal/PortalStyle', 'AxonIvyPortal/PortalKit', 'AxonIvyPortal/PortalTemplate', 'AxonIvyPortal/AxonIvyExpress']
          def projectName = 'PortalStyle'
          def ivyBuildPluginVersion = '8.0.0'
          def ivyEngineVersion = '9.1.0'
          def portalApplicationName = 'Portal'
          def ivyEngineFolder = 'D:/tools/ivy-server/trunk'
          for (module in modules) {
            ...
            bat """
              echo 1
              echo 2
            """
            ...
            echo 3
            bat "mvn clean install -f ${module}/pom.xml -Dbuild.plugin.version=${ivyBuildPluginVersion} -Divy.engine.version=${ivyEngineVersion}"
            // bat "mvn com.axonivy.ivy.ci:project-build-plugin:${ivyBuildPluginVersion}:deploy-to-engine -f ${module}/pom.xml -Divy.deploy.engine.app=${portalApplicationName} -Divy.deploy.engine.dir=${ivyEngineFolder} -Divy.engine.version=${ivyEngineVersion}"
          }
          archiveArtifacts "AxonIvyPortal/*/target/*.iar"

          
          // bat "mvn clean install -f AxonIvyPortal/${projectName}/pom.xml"
          // bat "mvn com.axonivy.ivy.ci:project-build-plugin:${ivyBuildPluginVersion}:deploy-to-engine -f AxonIvyPortal/PortalStyle/pom.xml -Divy.deploy.engine.app=${portalApplicationName} -Divy.deploy.engine.dir=${ivyEngineFolder} -Divy.engine.version=${ivyEngineVersion}"
          // archiveArtifacts "AxonIvyPortal/${projectName}/target/*.iar"
        }
      }
    }
  }
}
